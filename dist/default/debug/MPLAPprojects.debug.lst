

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 22:15:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 23/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   001C4E                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_registers
    68   001C4E  80                 	db	128
    69   001C4F  0F                 	db	15
    70   001C50  81                 	db	129
    71   001C51  0F                 	db	15
    72   001C52  82                 	db	130
    73   001C53  0F                 	db	15
    74   001C54  83                 	db	131
    75   001C55  0F                 	db	15
    76   001C56  84                 	db	132
    77   001C57  0F                 	db	15
    78                           
    79                           ;initializer for _lat_registers
    80   001C58  89                 	db	137
    81   001C59  0F                 	db	15
    82   001C5A  8A                 	db	138
    83   001C5B  0F                 	db	15
    84   001C5C  8B                 	db	139
    85   001C5D  0F                 	db	15
    86   001C5E  8C                 	db	140
    87   001C5F  0F                 	db	15
    88   001C60  8D                 	db	141
    89   001C61  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   001C62  92                 	db	146
    93   001C63  0F                 	db	15
    94   001C64  93                 	db	147
    95   001C65  0F                 	db	15
    96   001C66  94                 	db	148
    97   001C67  0F                 	db	15
    98   001C68  95                 	db	149
    99   001C69  0F                 	db	15
   100   001C6A  96                 	db	150
   101   001C6B  0F                 	db	15
   102                           
   103                           ;initializer for _seg
   104   001C6C  02                 	db	2
   105   001C6D  0A                 	db	10
   106   001C6E  12                 	db	18
   107   001C6F  1A                 	db	26
   108   001C70  00                 	db	0
   109                           
   110                           ;initializer for _reset
   111   001C71  BA                 	db	186
   112   001C72  00                 	db	0
   113   001C73  01                 	db	1
   114                           
   115                           ;initializer for _pause
   116   001C74  B2                 	db	178
   117   001C75  00                 	db	0
   118   001C76  01                 	db	1
   119                           
   120                           ;initializer for _speed_up
   121   001C77  AA                 	db	170
   122   001C78  00                 	db	0
   123   001C79  01                 	db	1
   124                           
   125                           ;initializer for _stop
   126   001C7A  B3                 	db	179
   127   001C7B  00                 	db	0
   128   001C7C  01                 	db	1
   129                           
   130                           ;initializer for _start
   131   001C7D  A2                 	db	162
   132   001C7E  00                 	db	0
   133   001C7F  01                 	db	1
   134                           
   135                           ;initializer for _control_6
   136   001C80  2B                 	db	43
   137                           
   138                           ;initializer for _control_5
   139   001C81  23                 	db	35
   140                           
   141                           ;initializer for _control_4
   142   001C82  1B                 	db	27
   143                           
   144                           ;initializer for _control_3
   145   001C83  13                 	db	19
   146                           
   147                           ;initializer for _control_2
   148   001C84  0B                 	db	11
   149                           
   150                           ;initializer for _control_1
   151   001C85  03                 	db	3
   152                           
   153                           	psect	smallconst
   154   001000                     __psmallconst:
   155                           	callstack 0
   156   001000  00                 	db	0
   157   001001                     _keypad_values:
   158                           	callstack 0
   159   001001  37                 	db	55
   160   001002  38                 	db	56
   161   001003  39                 	db	57
   162   001004  2F                 	db	47
   163   001005  34                 	db	52
   164   001006  35                 	db	53
   165   001007  36                 	db	54
   166   001008  2A                 	db	42
   167   001009  31                 	db	49
   168   00100A  32                 	db	50
   169   00100B  33                 	db	51
   170   00100C  2D                 	db	45
   171   00100D  23                 	db	35
   172   00100E  30                 	db	48
   173   00100F  3D                 	db	61
   174   001010  2B                 	db	43
   175   001011                     __end_of_keypad_values:
   176                           	callstack 0
   177   001011  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           	psect	nvCOMRAM
   180   000061                     __pnvCOMRAM:
   181                           	callstack 0
   182   000061                     _ret:
   183                           	callstack 0
   184   000061                     	ds	1
   185   000000                     _PORTE	set	3972
   186   000000                     _PORTD	set	3971
   187   000000                     _PORTC	set	3970
   188   000000                     _PORTB	set	3969
   189   000000                     _PORTA	set	3968
   190   000000                     _LATA	set	3977
   191   000000                     _TRISA	set	3986
   192   000000                     _TRISE	set	3990
   193   000000                     _TRISD	set	3989
   194   000000                     _TRISC	set	3988
   195   000000                     _TRISB	set	3987
   196   000000                     _LATE	set	3981
   197   000000                     _LATD	set	3980
   198   000000                     _LATC	set	3979
   199   000000                     _LATB	set	3978
   200                           
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204   001C86                     __pcinit:
   205                           	callstack 0
   206   001C86                     start_initialization:
   207                           	callstack 0
   208   001C86                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to COMRAM (56 bytes)
   212                           ; load TBLPTR registers with __pidataCOMRAM
   213   001C86  0E4E               	movlw	low __pidataCOMRAM
   214   001C88  6EF6               	movwf	tblptrl,c
   215   001C8A  0E1C               	movlw	high __pidataCOMRAM
   216   001C8C  6EF7               	movwf	tblptrh,c
   217   001C8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   218   001C90  6EF8               	movwf	tblptru,c
   219   001C92  EE00  F001         	lfsr	0,__pdataCOMRAM
   220   001C96  EE10 F038          	lfsr	1,56
   221   001C9A                     copy_data0:
   222   001C9A  0009               	tblrd		*+
   223   001C9C  CFF5 FFEE          	movff	tablat,postinc0
   224   001CA0  50E5               	movf	postdec1,w,c
   225   001CA2  50E1               	movf	fsr1l,w,c
   226   001CA4  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to COMRAM (23 bytes)
   229   001CA6  EE00  F039         	lfsr	0,__pbssCOMRAM
   230   001CAA  0E17               	movlw	23
   231   001CAC                     clear_0:
   232   001CAC  6AEE               	clrf	postinc0,c
   233   001CAE  06E8               	decf	wreg,f,c
   234   001CB0  E1FD               	bnz	clear_0
   235   001CB2                     end_of_initialization:
   236                           	callstack 0
   237   001CB2                     __end_of__initialization:
   238                           	callstack 0
   239   001CB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240   001CB4  6EF8               	movwf	tblptru,c
   241   001CB6  0100               	movlb	0
   242   001CB8  EF09  F008         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245   000039                     __pbssCOMRAM:
   246                           	callstack 0
   247   000039                     _hours:
   248                           	callstack 0
   249   000039                     	ds	1
   250   00003A                     _minutes:
   251                           	callstack 0
   252   00003A                     	ds	1
   253   00003B                     _seconds:
   254                           	callstack 0
   255   00003B                     	ds	1
   256   00003C                     Relay_turn_off@F2900:
   257                           	callstack 0
   258   00003C                     	ds	1
   259   00003D                     Relay_turn_on@F2895:
   260                           	callstack 0
   261   00003D                     	ds	1
   262   00003E                     Relay_initialize@F2890:
   263                           	callstack 0
   264   00003E                     	ds	1
   265   00003F                     led_toggle@F2909:
   266                           	callstack 0
   267   00003F                     	ds	1
   268   000040                     led_turn_off@F2904:
   269                           	callstack 0
   270   000040                     	ds	1
   271   000041                     led_turn_on@F2899:
   272                           	callstack 0
   273   000041                     	ds	1
   274   000042                     led_initialize@F2894:
   275                           	callstack 0
   276   000042                     	ds	1
   277   000043                     dc_motor_stop@F2916:
   278                           	callstack 0
   279   000043                     	ds	1
   280   000044                     dc_motor_stop@F2914:
   281                           	callstack 0
   282   000044                     	ds	1
   283   000045                     dc_motor_move_left@F2909:
   284                           	callstack 0
   285   000045                     	ds	1
   286   000046                     dc_motor_move_left@F2907:
   287                           	callstack 0
   288   000046                     	ds	1
   289   000047                     dc_motor_move_right@F2902:
   290                           	callstack 0
   291   000047                     	ds	1
   292   000048                     dc_motor_move_right@F2900:
   293                           	callstack 0
   294   000048                     	ds	1
   295   000049                     dc_motor_intitialize@F2895:
   296                           	callstack 0
   297   000049                     	ds	1
   298   00004A                     dc_motor_intitialize@F2893:
   299                           	callstack 0
   300   00004A                     	ds	1
   301   00004B                     _speed_state:
   302                           	callstack 0
   303   00004B                     	ds	1
   304   00004C                     _pause_state:
   305                           	callstack 0
   306   00004C                     	ds	1
   307   00004D                     _reset_state:
   308                           	callstack 0
   309   00004D                     	ds	1
   310   00004E                     _stop_state:
   311                           	callstack 0
   312   00004E                     	ds	1
   313   00004F                     _start_state:
   314                           	callstack 0
   315   00004F                     	ds	1
   316                           
   317                           	psect	dataCOMRAM
   318   000001                     __pdataCOMRAM:
   319                           	callstack 0
   320   000001                     _port_registers:
   321                           	callstack 0
   322   000001                     	ds	10
   323   00000B                     _lat_registers:
   324                           	callstack 0
   325   00000B                     	ds	10
   326   000015                     _tris_registers:
   327                           	callstack 0
   328   000015                     	ds	10
   329   00001F                     _seg:
   330                           	callstack 0
   331   00001F                     	ds	5
   332   000024                     _reset:
   333                           	callstack 0
   334   000024                     	ds	3
   335   000027                     _pause:
   336                           	callstack 0
   337   000027                     	ds	3
   338   00002A                     _speed_up:
   339                           	callstack 0
   340   00002A                     	ds	3
   341   00002D                     _stop:
   342                           	callstack 0
   343   00002D                     	ds	3
   344   000030                     _start:
   345                           	callstack 0
   346   000030                     	ds	3
   347   000033                     _control_6:
   348                           	callstack 0
   349   000033                     	ds	1
   350   000034                     _control_5:
   351                           	callstack 0
   352   000034                     	ds	1
   353   000035                     _control_4:
   354                           	callstack 0
   355   000035                     	ds	1
   356   000036                     _control_3:
   357                           	callstack 0
   358   000036                     	ds	1
   359   000037                     _control_2:
   360                           	callstack 0
   361   000037                     	ds	1
   362   000038                     _control_1:
   363                           	callstack 0
   364   000038                     	ds	1
   365                           
   366                           	psect	cstackCOMRAM
   367   000050                     __pcstackCOMRAM:
   368                           	callstack 0
   369   000050                     ?___awdiv:
   370                           	callstack 0
   371   000050                     ?___awmod:
   372                           	callstack 0
   373   000050                     gpio_pin_direction_initialize@_pin_config:
   374                           	callstack 0
   375   000050                     gpio_pin_write_logic@_pin_config:
   376                           	callstack 0
   377   000050                     gpio_pin_read_logic@_pin_config:
   378                           	callstack 0
   379   000050                     ___awdiv@dividend:
   380                           	callstack 0
   381   000050                     ___awmod@dividend:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x0
   385   000050                     	ds	1
   386   000051                     ??_gpio_pin_direction_initialize:
   387   000051                     gpio_pin_write_logic@logic:
   388                           	callstack 0
   389   000051                     gpio_pin_read_logic@logic:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x1
   393   000051                     	ds	1
   394   000052                     ??_gpio_pin_write_logic:
   395   000052                     ??_gpio_pin_read_logic:
   396   000052                     ___awdiv@divisor:
   397                           	callstack 0
   398   000052                     ___awmod@divisor:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x2
   402   000052                     	ds	2
   403   000054                     ___awdiv@counter:
   404                           	callstack 0
   405   000054                     ___awmod@counter:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x4
   409   000054                     	ds	1
   410   000055                     ___awdiv@sign:
   411                           	callstack 0
   412   000055                     ___awmod@sign:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x5
   416   000055                     	ds	1
   417   000056                     Button_initialize@btn:
   418                           	callstack 0
   419   000056                     ___awdiv@quotient:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x6
   423   000056                     	ds	1
   424   000057                     Button_initialize@ret:
   425                           	callstack 0
   426   000057                     gpio_pin_write_logic@ret:
   427                           	callstack 0
   428   000057                     gpio_pin_read_logic@ret:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x7
   432   000057                     	ds	1
   433   000058                     segment_write_number@seg:
   434                           	callstack 0
   435   000058                     Button_read@btn:
   436                           	callstack 0
   437   000058                     gpio_pin_initialize@_pin_config:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441   000058                     	ds	1
   442   000059                     ??_gpio_pin_initialize:
   443   000059                     segment_write_number@number:
   444                           	callstack 0
   445   000059                     Button_read@_st:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x9
   449   000059                     	ds	1
   450   00005A                     segment_inititalize@seg:
   451                           	callstack 0
   452   00005A                     segment_write_number@ret:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xA
   456   00005A                     	ds	1
   457   00005B                     segment_inititalize@ret:
   458                           	callstack 0
   459   00005B                     Button_read@ret:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463   00005B                     	ds	1
   464   00005C                     Button_read@button_logic:
   465                           	callstack 0
   466   00005C                     application_initialize@ret:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xC
   470   00005C                     	ds	1
   471   00005D                     ??_main:
   472                           
   473                           ; 1 bytes @ 0xD
   474   00005D                     	ds	1
   475   00005E                     main@counter:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xE
   479   00005E                     	ds	1
   480   00005F                     main@start_flag:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0xF
   484   00005F                     	ds	1
   485   000060                     main@delay_time:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x10
   489   000060                     	ds	1
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 139 in file "application.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  delay_time      1   16[COMRAM] unsigned char 
   501 ;;  start_flag      1   15[COMRAM] unsigned char 
   502 ;;  counter         1   14[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  2  584[None  ] int 
   505 ;; Registers used:
   506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;Total ram usage:        4 bytes
   517 ;; Hardware stack levels required when called: 4
   518 ;; This function calls:
   519 ;;		_Button_read
   520 ;;		___awdiv
   521 ;;		___awmod
   522 ;;		_application_initialize
   523 ;;		_gpio_pin_write_logic
   524 ;;		_segment_write_number
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531   001012                     __ptext0:
   532                           	callstack 0
   533   001012                     _main:
   534                           	callstack 27
   535   001012                     
   536                           ;application.c: 141:     application_initialize();
   537   001012  EC61  F00D         	call	_application_initialize	;wreg free
   538   001016                     
   539                           ;application.c: 142:     uint8 counter;;application.c: 143:     uint8 start_flag = 0;
   540   001016  0E00               	movlw	0
   541   001018  6E5F               	movwf	main@start_flag^0,c
   542   00101A                     
   543                           ;application.c: 145:     uint8 delay_time = 50;
   544   00101A  0E32               	movlw	50
   545   00101C  6E60               	movwf	main@delay_time^0,c
   546   00101E                     l2624:
   547                           
   548                           ;application.c: 147:     {;application.c: 148:        ret = Button_read(&start, &start_s
      +                          tate);
   549   00101E  0E30               	movlw	low _start
   550   001020  6E58               	movwf	Button_read@btn^0,c
   551   001022  0E4F               	movlw	low _start_state
   552   001024  6E59               	movwf	Button_read@_st^0,c
   553   001026  EC5C  F00C         	call	_Button_read	;wreg free
   554   00102A  6E61               	movwf	_ret^0,c
   555   00102C                     
   556                           ;application.c: 149:        if(start_state == BUTTON_PRESSED)
   557   00102C  044F               	decf	_start_state^0,w,c
   558   00102E  A4D8               	btfss	status,2,c
   559   001030  EF1C  F008         	goto	u1701
   560   001034  EF1E  F008         	goto	u1700
   561   001038                     u1701:
   562   001038  EF20  F008         	goto	l2630
   563   00103C                     u1700:
   564   00103C                     
   565                           ;application.c: 150:        {;application.c: 151:            start_flag = 1;
   566   00103C  0E01               	movlw	1
   567   00103E  6E5F               	movwf	main@start_flag^0,c
   568   001040                     l2630:
   569                           
   570                           ;application.c: 153:        if(start_flag == 1)
   571   001040  045F               	decf	main@start_flag^0,w,c
   572   001042  A4D8               	btfss	status,2,c
   573   001044  EF26  F008         	goto	u1711
   574   001048  EF28  F008         	goto	u1710
   575   00104C                     u1711:
   576   00104C  EF0F  F008         	goto	l2624
   577   001050                     u1710:
   578   001050                     
   579                           ;application.c: 154:         {;application.c: 155:             for(counter = 0; counter 
      +                          <= delay_time; counter++)
   580   001050  0E00               	movlw	0
   581   001052  6E5E               	movwf	main@counter^0,c
   582   001054  EFB2  F00A         	goto	l2750
   583   001058                     l2634:
   584                           
   585                           ;application.c: 156:             {;application.c: 158:                 _delay((unsigned 
      +                          long)((3333)*(8000000UL/4000000.0)));
   586   001058  0E09               	movlw	9
   587   00105A  6E5D               	movwf	??_main^0,c
   588   00105C  0EA7               	movlw	167
   589   00105E                     u1937:
   590   00105E  2EE8               	decfsz	wreg,f,c
   591   001060  D7FE               	bra	u1937
   592   001062  2E5D               	decfsz	??_main^0,f,c
   593   001064  D7FC               	bra	u1937
   594   001066  0000               	nop	
   595   001068                     
   596                           ;application.c: 159:                 ret = gpio_pin_write_logic(&control_1, GPIO_LOGIC_H
      +                          IGH);
   597   001068  0E38               	movlw	low _control_1
   598   00106A  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   599   00106C  0E01               	movlw	1
   600   00106E  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   601   001070  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   602   001074  6E61               	movwf	_ret^0,c
   603   001076                     
   604                           ;application.c: 160:                 ret = segment_write_number(&seg, hours/10);
   605   001076  0E1F               	movlw	low _seg
   606   001078  6E58               	movwf	segment_write_number@seg^0,c
   607   00107A  C039  F050         	movff	_hours,___awdiv@dividend
   608   00107E  6A51               	clrf	(___awdiv@dividend+1)^0,c
   609   001080  0E00               	movlw	0
   610   001082  6E53               	movwf	(___awdiv@divisor+1)^0,c
   611   001084  0E0A               	movlw	10
   612   001086  6E52               	movwf	___awdiv@divisor^0,c
   613   001088  ECFA  F00B         	call	___awdiv	;wreg free
   614   00108C  5050               	movf	?___awdiv^0,w,c
   615   00108E  6E59               	movwf	segment_write_number@number^0,c
   616   001090  EC9E  F00D         	call	_segment_write_number	;wreg free
   617   001094  6E61               	movwf	_ret^0,c
   618                           
   619                           ;application.c: 161:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   620   001096  0E09               	movlw	9
   621   001098  6E5D               	movwf	??_main^0,c
   622   00109A  0EA7               	movlw	167
   623   00109C                     u1947:
   624   00109C  2EE8               	decfsz	wreg,f,c
   625   00109E  D7FE               	bra	u1947
   626   0010A0  2E5D               	decfsz	??_main^0,f,c
   627   0010A2  D7FC               	bra	u1947
   628   0010A4  0000               	nop	
   629   0010A6                     
   630                           ;application.c: 162:                 ret = gpio_pin_write_logic(&control_1, GPIO_LOGIC_L
      +                          OW);
   631   0010A6  0E38               	movlw	low _control_1
   632   0010A8  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   633   0010AA  0E00               	movlw	0
   634   0010AC  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   635   0010AE  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   636   0010B2  6E61               	movwf	_ret^0,c
   637   0010B4                     
   638                           ;application.c: 164:                 ret = gpio_pin_write_logic(&control_2, GPIO_LOGIC_H
      +                          IGH);
   639   0010B4  0E37               	movlw	low _control_2
   640   0010B6  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   641   0010B8  0E01               	movlw	1
   642   0010BA  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   643   0010BC  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   644   0010C0  6E61               	movwf	_ret^0,c
   645   0010C2                     
   646                           ;application.c: 165:                 ret = segment_write_number(&seg, hours%10);
   647   0010C2  0E1F               	movlw	low _seg
   648   0010C4  6E58               	movwf	segment_write_number@seg^0,c
   649   0010C6  C039  F050         	movff	_hours,___awmod@dividend
   650   0010CA  6A51               	clrf	(___awmod@dividend+1)^0,c
   651   0010CC  0E00               	movlw	0
   652   0010CE  6E53               	movwf	(___awmod@divisor+1)^0,c
   653   0010D0  0E0A               	movlw	10
   654   0010D2  6E52               	movwf	___awmod@divisor^0,c
   655   0010D4  ECB5  F00C         	call	___awmod	;wreg free
   656   0010D8  5050               	movf	?___awmod^0,w,c
   657   0010DA  6E59               	movwf	segment_write_number@number^0,c
   658   0010DC  EC9E  F00D         	call	_segment_write_number	;wreg free
   659   0010E0  6E61               	movwf	_ret^0,c
   660   0010E2                     
   661                           ;application.c: 166:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   662   0010E2  0E09               	movlw	9
   663   0010E4  6E5D               	movwf	??_main^0,c
   664   0010E6  0EA7               	movlw	167
   665   0010E8                     u1957:
   666   0010E8  2EE8               	decfsz	wreg,f,c
   667   0010EA  D7FE               	bra	u1957
   668   0010EC  2E5D               	decfsz	??_main^0,f,c
   669   0010EE  D7FC               	bra	u1957
   670   0010F0  0000               	nop	
   671                           
   672                           ;application.c: 167:                 ret = gpio_pin_write_logic(&control_2, GPIO_LOGIC_L
      +                          OW);
   673   0010F2  0E37               	movlw	low _control_2
   674   0010F4  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   675   0010F6  0E00               	movlw	0
   676   0010F8  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   677   0010FA  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   678   0010FE  6E61               	movwf	_ret^0,c
   679                           
   680                           ;application.c: 169:                 ret = gpio_pin_write_logic(&control_3, GPIO_LOGIC_H
      +                          IGH);
   681   001100  0E36               	movlw	low _control_3
   682   001102  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   683   001104  0E01               	movlw	1
   684   001106  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   685   001108  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   686   00110C  6E61               	movwf	_ret^0,c
   687                           
   688                           ;application.c: 170:                 ret = segment_write_number(&seg, minutes/10);
   689   00110E  0E1F               	movlw	low _seg
   690   001110  6E58               	movwf	segment_write_number@seg^0,c
   691   001112  C03A  F050         	movff	_minutes,___awdiv@dividend
   692   001116  6A51               	clrf	(___awdiv@dividend+1)^0,c
   693   001118  0E00               	movlw	0
   694   00111A  6E53               	movwf	(___awdiv@divisor+1)^0,c
   695   00111C  0E0A               	movlw	10
   696   00111E  6E52               	movwf	___awdiv@divisor^0,c
   697   001120  ECFA  F00B         	call	___awdiv	;wreg free
   698   001124  5050               	movf	?___awdiv^0,w,c
   699   001126  6E59               	movwf	segment_write_number@number^0,c
   700   001128  EC9E  F00D         	call	_segment_write_number	;wreg free
   701   00112C  6E61               	movwf	_ret^0,c
   702   00112E                     
   703                           ;application.c: 171:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   704   00112E  0E09               	movlw	9
   705   001130  6E5D               	movwf	??_main^0,c
   706   001132  0EA7               	movlw	167
   707   001134                     u1967:
   708   001134  2EE8               	decfsz	wreg,f,c
   709   001136  D7FE               	bra	u1967
   710   001138  2E5D               	decfsz	??_main^0,f,c
   711   00113A  D7FC               	bra	u1967
   712   00113C  0000               	nop	
   713   00113E                     
   714                           ;application.c: 172:                 ret = gpio_pin_write_logic(&control_3, GPIO_LOGIC_L
      +                          OW);
   715   00113E  0E36               	movlw	low _control_3
   716   001140  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   717   001142  0E00               	movlw	0
   718   001144  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   719   001146  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   720   00114A  6E61               	movwf	_ret^0,c
   721   00114C                     
   722                           ;application.c: 174:                 ret = gpio_pin_write_logic(&control_4, GPIO_LOGIC_H
      +                          IGH);
   723   00114C  0E35               	movlw	low _control_4
   724   00114E  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   725   001150  0E01               	movlw	1
   726   001152  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   727   001154  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   728   001158  6E61               	movwf	_ret^0,c
   729   00115A                     
   730                           ;application.c: 175:                 ret = segment_write_number(&seg, minutes%10);
   731   00115A  0E1F               	movlw	low _seg
   732   00115C  6E58               	movwf	segment_write_number@seg^0,c
   733   00115E  C03A  F050         	movff	_minutes,___awmod@dividend
   734   001162  6A51               	clrf	(___awmod@dividend+1)^0,c
   735   001164  0E00               	movlw	0
   736   001166  6E53               	movwf	(___awmod@divisor+1)^0,c
   737   001168  0E0A               	movlw	10
   738   00116A  6E52               	movwf	___awmod@divisor^0,c
   739   00116C  ECB5  F00C         	call	___awmod	;wreg free
   740   001170  5050               	movf	?___awmod^0,w,c
   741   001172  6E59               	movwf	segment_write_number@number^0,c
   742   001174  EC9E  F00D         	call	_segment_write_number	;wreg free
   743   001178  6E61               	movwf	_ret^0,c
   744                           
   745                           ;application.c: 176:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   746   00117A  0E09               	movlw	9
   747   00117C  6E5D               	movwf	??_main^0,c
   748   00117E  0EA7               	movlw	167
   749   001180                     u1977:
   750   001180  2EE8               	decfsz	wreg,f,c
   751   001182  D7FE               	bra	u1977
   752   001184  2E5D               	decfsz	??_main^0,f,c
   753   001186  D7FC               	bra	u1977
   754   001188  0000               	nop	
   755   00118A                     
   756                           ;application.c: 177:                 ret = gpio_pin_write_logic(&control_4, GPIO_LOGIC_L
      +                          OW);
   757   00118A  0E35               	movlw	low _control_4
   758   00118C  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   759   00118E  0E00               	movlw	0
   760   001190  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   761   001192  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   762   001196  6E61               	movwf	_ret^0,c
   763   001198                     
   764                           ;application.c: 179:                 ret = gpio_pin_write_logic(&control_5, GPIO_LOGIC_H
      +                          IGH);
   765   001198  0E34               	movlw	low _control_5
   766   00119A  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   767   00119C  0E01               	movlw	1
   768   00119E  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   769   0011A0  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   770   0011A4  6E61               	movwf	_ret^0,c
   771   0011A6                     
   772                           ;application.c: 180:                 ret = segment_write_number(&seg, seconds/10);
   773   0011A6  0E1F               	movlw	low _seg
   774   0011A8  6E58               	movwf	segment_write_number@seg^0,c
   775   0011AA  C03B  F050         	movff	_seconds,___awdiv@dividend
   776   0011AE  6A51               	clrf	(___awdiv@dividend+1)^0,c
   777   0011B0  0E00               	movlw	0
   778   0011B2  6E53               	movwf	(___awdiv@divisor+1)^0,c
   779   0011B4  0E0A               	movlw	10
   780   0011B6  6E52               	movwf	___awdiv@divisor^0,c
   781   0011B8  ECFA  F00B         	call	___awdiv	;wreg free
   782   0011BC  5050               	movf	?___awdiv^0,w,c
   783   0011BE  6E59               	movwf	segment_write_number@number^0,c
   784   0011C0  EC9E  F00D         	call	_segment_write_number	;wreg free
   785   0011C4  6E61               	movwf	_ret^0,c
   786   0011C6                     
   787                           ;application.c: 181:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   788   0011C6  0E09               	movlw	9
   789   0011C8  6E5D               	movwf	??_main^0,c
   790   0011CA  0EA7               	movlw	167
   791   0011CC                     u1987:
   792   0011CC  2EE8               	decfsz	wreg,f,c
   793   0011CE  D7FE               	bra	u1987
   794   0011D0  2E5D               	decfsz	??_main^0,f,c
   795   0011D2  D7FC               	bra	u1987
   796   0011D4  0000               	nop	
   797                           
   798                           ;application.c: 182:                 ret = gpio_pin_write_logic(&control_5, GPIO_LOGIC_L
      +                          OW);
   799   0011D6  0E34               	movlw	low _control_5
   800   0011D8  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   801   0011DA  0E00               	movlw	0
   802   0011DC  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   803   0011DE  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   804   0011E2  6E61               	movwf	_ret^0,c
   805                           
   806                           ;application.c: 184:                 ret = gpio_pin_write_logic(&control_6, GPIO_LOGIC_H
      +                          IGH);
   807   0011E4  0E33               	movlw	low _control_6
   808   0011E6  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   809   0011E8  0E01               	movlw	1
   810   0011EA  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   811   0011EC  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   812   0011F0  6E61               	movwf	_ret^0,c
   813                           
   814                           ;application.c: 185:                 ret = segment_write_number(&seg, seconds%10);
   815   0011F2  0E1F               	movlw	low _seg
   816   0011F4  6E58               	movwf	segment_write_number@seg^0,c
   817   0011F6  C03B  F050         	movff	_seconds,___awmod@dividend
   818   0011FA  6A51               	clrf	(___awmod@dividend+1)^0,c
   819   0011FC  0E00               	movlw	0
   820   0011FE  6E53               	movwf	(___awmod@divisor+1)^0,c
   821   001200  0E0A               	movlw	10
   822   001202  6E52               	movwf	___awmod@divisor^0,c
   823   001204  ECB5  F00C         	call	___awmod	;wreg free
   824   001208  5050               	movf	?___awmod^0,w,c
   825   00120A  6E59               	movwf	segment_write_number@number^0,c
   826   00120C  EC9E  F00D         	call	_segment_write_number	;wreg free
   827   001210  6E61               	movwf	_ret^0,c
   828   001212                     
   829                           ;application.c: 186:                 _delay((unsigned long)((3333)*(8000000UL/4000000.0)
      +                          ));
   830   001212  0E09               	movlw	9
   831   001214  6E5D               	movwf	??_main^0,c
   832   001216  0EA7               	movlw	167
   833   001218                     u1997:
   834   001218  2EE8               	decfsz	wreg,f,c
   835   00121A  D7FE               	bra	u1997
   836   00121C  2E5D               	decfsz	??_main^0,f,c
   837   00121E  D7FC               	bra	u1997
   838   001220  0000               	nop	
   839   001222                     
   840                           ;application.c: 187:                 ret = gpio_pin_write_logic(&control_6, GPIO_LOGIC_L
      +                          OW);
   841   001222  0E33               	movlw	low _control_6
   842   001224  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   843   001226  0E00               	movlw	0
   844   001228  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   845   00122A  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   846   00122E  6E61               	movwf	_ret^0,c
   847   001230                     
   848                           ;application.c: 190:                 ret = Button_read(&speed_up, &speed_state);
   849   001230  0E2A               	movlw	low _speed_up
   850   001232  6E58               	movwf	Button_read@btn^0,c
   851   001234  0E4B               	movlw	low _speed_state
   852   001236  6E59               	movwf	Button_read@_st^0,c
   853   001238  EC5C  F00C         	call	_Button_read	;wreg free
   854   00123C  6E61               	movwf	_ret^0,c
   855   00123E                     
   856                           ;application.c: 191:                 if(speed_state == BUTTON_PRESSED)
   857   00123E  044B               	decf	_speed_state^0,w,c
   858   001240  A4D8               	btfss	status,2,c
   859   001242  EF25  F009         	goto	u1721
   860   001246  EF27  F009         	goto	u1720
   861   00124A                     u1721:
   862   00124A  EF2B  F009         	goto	l2674
   863   00124E                     u1720:
   864   00124E                     
   865                           ;application.c: 192:                 {;application.c: 193:                     delay_tim
      +                          e = 5;
   866   00124E  0E05               	movlw	5
   867   001250  6E60               	movwf	main@delay_time^0,c
   868                           
   869                           ;application.c: 194:                 }
   870   001252  EF35  F009         	goto	l2678
   871   001256                     l2674:
   872   001256  504B               	movf	_speed_state^0,w,c
   873   001258  A4D8               	btfss	status,2,c
   874   00125A  EF31  F009         	goto	u1731
   875   00125E  EF33  F009         	goto	u1730
   876   001262                     u1731:
   877   001262  EF35  F009         	goto	l2678
   878   001266                     u1730:
   879   001266                     
   880                           ;application.c: 196:                 {;application.c: 197:                     delay_tim
      +                          e = 50;
   881   001266  0E32               	movlw	50
   882   001268  6E60               	movwf	main@delay_time^0,c
   883   00126A                     l2678:
   884                           
   885                           ;application.c: 201:                 ret = Button_read(&pause, &pause_state);
   886   00126A  0E27               	movlw	low _pause
   887   00126C  6E58               	movwf	Button_read@btn^0,c
   888   00126E  0E4C               	movlw	low _pause_state
   889   001270  6E59               	movwf	Button_read@_st^0,c
   890   001272  EC5C  F00C         	call	_Button_read	;wreg free
   891   001276  6E61               	movwf	_ret^0,c
   892   001278                     
   893                           ;application.c: 202:                 if(pause_state == BUTTON_PRESSED)
   894   001278  044C               	decf	_pause_state^0,w,c
   895   00127A  A4D8               	btfss	status,2,c
   896   00127C  EF42  F009         	goto	u1741
   897   001280  EF44  F009         	goto	u1740
   898   001284                     u1741:
   899   001284  EF4E  F00A         	goto	l2724
   900   001288                     u1740:
   901   001288                     l2682:
   902                           
   903                           ;application.c: 205:                     {;application.c: 206:                         _
      +                          delay((unsigned long)((3333)*(8000000UL/4000000.0)));
   904   001288  0E09               	movlw	9
   905   00128A  6E5D               	movwf	??_main^0,c
   906   00128C  0EA7               	movlw	167
   907   00128E                     u2007:
   908   00128E  2EE8               	decfsz	wreg,f,c
   909   001290  D7FE               	bra	u2007
   910   001292  2E5D               	decfsz	??_main^0,f,c
   911   001294  D7FC               	bra	u2007
   912   001296  0000               	nop	
   913   001298                     
   914                           ;application.c: 207:                         ret = gpio_pin_write_logic(&control_1, GPIO
      +                          _LOGIC_HIGH);
   915   001298  0E38               	movlw	low _control_1
   916   00129A  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   917   00129C  0E01               	movlw	1
   918   00129E  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   919   0012A0  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   920   0012A4  6E61               	movwf	_ret^0,c
   921   0012A6                     
   922                           ;application.c: 208:                         ret = segment_write_number(&seg, hours/10);
   923   0012A6  0E1F               	movlw	low _seg
   924   0012A8  6E58               	movwf	segment_write_number@seg^0,c
   925   0012AA  C039  F050         	movff	_hours,___awdiv@dividend
   926   0012AE  6A51               	clrf	(___awdiv@dividend+1)^0,c
   927   0012B0  0E00               	movlw	0
   928   0012B2  6E53               	movwf	(___awdiv@divisor+1)^0,c
   929   0012B4  0E0A               	movlw	10
   930   0012B6  6E52               	movwf	___awdiv@divisor^0,c
   931   0012B8  ECFA  F00B         	call	___awdiv	;wreg free
   932   0012BC  5050               	movf	?___awdiv^0,w,c
   933   0012BE  6E59               	movwf	segment_write_number@number^0,c
   934   0012C0  EC9E  F00D         	call	_segment_write_number	;wreg free
   935   0012C4  6E61               	movwf	_ret^0,c
   936                           
   937                           ;application.c: 209:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
   938   0012C6  0E09               	movlw	9
   939   0012C8  6E5D               	movwf	??_main^0,c
   940   0012CA  0EA7               	movlw	167
   941   0012CC                     u2017:
   942   0012CC  2EE8               	decfsz	wreg,f,c
   943   0012CE  D7FE               	bra	u2017
   944   0012D0  2E5D               	decfsz	??_main^0,f,c
   945   0012D2  D7FC               	bra	u2017
   946   0012D4  0000               	nop	
   947   0012D6                     
   948                           ;application.c: 210:                         ret = gpio_pin_write_logic(&control_1, GPIO
      +                          _LOGIC_LOW);
   949   0012D6  0E38               	movlw	low _control_1
   950   0012D8  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   951   0012DA  0E00               	movlw	0
   952   0012DC  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   953   0012DE  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   954   0012E2  6E61               	movwf	_ret^0,c
   955   0012E4                     
   956                           ;application.c: 212:                         ret = gpio_pin_write_logic(&control_2, GPIO
      +                          _LOGIC_HIGH);
   957   0012E4  0E37               	movlw	low _control_2
   958   0012E6  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   959   0012E8  0E01               	movlw	1
   960   0012EA  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   961   0012EC  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   962   0012F0  6E61               	movwf	_ret^0,c
   963   0012F2                     
   964                           ;application.c: 213:                         ret = segment_write_number(&seg, hours%10);
   965   0012F2  0E1F               	movlw	low _seg
   966   0012F4  6E58               	movwf	segment_write_number@seg^0,c
   967   0012F6  C039  F050         	movff	_hours,___awmod@dividend
   968   0012FA  6A51               	clrf	(___awmod@dividend+1)^0,c
   969   0012FC  0E00               	movlw	0
   970   0012FE  6E53               	movwf	(___awmod@divisor+1)^0,c
   971   001300  0E0A               	movlw	10
   972   001302  6E52               	movwf	___awmod@divisor^0,c
   973   001304  ECB5  F00C         	call	___awmod	;wreg free
   974   001308  5050               	movf	?___awmod^0,w,c
   975   00130A  6E59               	movwf	segment_write_number@number^0,c
   976   00130C  EC9E  F00D         	call	_segment_write_number	;wreg free
   977   001310  6E61               	movwf	_ret^0,c
   978   001312                     
   979                           ;application.c: 214:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
   980   001312  0E09               	movlw	9
   981   001314  6E5D               	movwf	??_main^0,c
   982   001316  0EA7               	movlw	167
   983   001318                     u2027:
   984   001318  2EE8               	decfsz	wreg,f,c
   985   00131A  D7FE               	bra	u2027
   986   00131C  2E5D               	decfsz	??_main^0,f,c
   987   00131E  D7FC               	bra	u2027
   988   001320  0000               	nop	
   989                           
   990                           ;application.c: 215:                         ret = gpio_pin_write_logic(&control_2, GPIO
      +                          _LOGIC_LOW);
   991   001322  0E37               	movlw	low _control_2
   992   001324  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   993   001326  0E00               	movlw	0
   994   001328  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   995   00132A  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
   996   00132E  6E61               	movwf	_ret^0,c
   997                           
   998                           ;application.c: 217:                         ret = gpio_pin_write_logic(&control_3, GPIO
      +                          _LOGIC_HIGH);
   999   001330  0E36               	movlw	low _control_3
  1000   001332  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1001   001334  0E01               	movlw	1
  1002   001336  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1003   001338  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1004   00133C  6E61               	movwf	_ret^0,c
  1005                           
  1006                           ;application.c: 218:                         ret = segment_write_number(&seg, minutes/10
      +                          );
  1007   00133E  0E1F               	movlw	low _seg
  1008   001340  6E58               	movwf	segment_write_number@seg^0,c
  1009   001342  C03A  F050         	movff	_minutes,___awdiv@dividend
  1010   001346  6A51               	clrf	(___awdiv@dividend+1)^0,c
  1011   001348  0E00               	movlw	0
  1012   00134A  6E53               	movwf	(___awdiv@divisor+1)^0,c
  1013   00134C  0E0A               	movlw	10
  1014   00134E  6E52               	movwf	___awdiv@divisor^0,c
  1015   001350  ECFA  F00B         	call	___awdiv	;wreg free
  1016   001354  5050               	movf	?___awdiv^0,w,c
  1017   001356  6E59               	movwf	segment_write_number@number^0,c
  1018   001358  EC9E  F00D         	call	_segment_write_number	;wreg free
  1019   00135C  6E61               	movwf	_ret^0,c
  1020   00135E                     
  1021                           ;application.c: 219:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
  1022   00135E  0E09               	movlw	9
  1023   001360  6E5D               	movwf	??_main^0,c
  1024   001362  0EA7               	movlw	167
  1025   001364                     u2037:
  1026   001364  2EE8               	decfsz	wreg,f,c
  1027   001366  D7FE               	bra	u2037
  1028   001368  2E5D               	decfsz	??_main^0,f,c
  1029   00136A  D7FC               	bra	u2037
  1030   00136C  0000               	nop	
  1031   00136E                     
  1032                           ;application.c: 220:                         ret = gpio_pin_write_logic(&control_3, GPIO
      +                          _LOGIC_LOW);
  1033   00136E  0E36               	movlw	low _control_3
  1034   001370  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1035   001372  0E00               	movlw	0
  1036   001374  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1037   001376  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1038   00137A  6E61               	movwf	_ret^0,c
  1039   00137C                     
  1040                           ;application.c: 222:                         ret = gpio_pin_write_logic(&control_4, GPIO
      +                          _LOGIC_HIGH);
  1041   00137C  0E35               	movlw	low _control_4
  1042   00137E  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1043   001380  0E01               	movlw	1
  1044   001382  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1045   001384  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1046   001388  6E61               	movwf	_ret^0,c
  1047   00138A                     
  1048                           ;application.c: 223:                         ret = segment_write_number(&seg, minutes%10
      +                          );
  1049   00138A  0E1F               	movlw	low _seg
  1050   00138C  6E58               	movwf	segment_write_number@seg^0,c
  1051   00138E  C03A  F050         	movff	_minutes,___awmod@dividend
  1052   001392  6A51               	clrf	(___awmod@dividend+1)^0,c
  1053   001394  0E00               	movlw	0
  1054   001396  6E53               	movwf	(___awmod@divisor+1)^0,c
  1055   001398  0E0A               	movlw	10
  1056   00139A  6E52               	movwf	___awmod@divisor^0,c
  1057   00139C  ECB5  F00C         	call	___awmod	;wreg free
  1058   0013A0  5050               	movf	?___awmod^0,w,c
  1059   0013A2  6E59               	movwf	segment_write_number@number^0,c
  1060   0013A4  EC9E  F00D         	call	_segment_write_number	;wreg free
  1061   0013A8  6E61               	movwf	_ret^0,c
  1062                           
  1063                           ;application.c: 224:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
  1064   0013AA  0E09               	movlw	9
  1065   0013AC  6E5D               	movwf	??_main^0,c
  1066   0013AE  0EA7               	movlw	167
  1067   0013B0                     u2047:
  1068   0013B0  2EE8               	decfsz	wreg,f,c
  1069   0013B2  D7FE               	bra	u2047
  1070   0013B4  2E5D               	decfsz	??_main^0,f,c
  1071   0013B6  D7FC               	bra	u2047
  1072   0013B8  0000               	nop	
  1073   0013BA                     
  1074                           ;application.c: 225:                         ret = gpio_pin_write_logic(&control_4, GPIO
      +                          _LOGIC_LOW);
  1075   0013BA  0E35               	movlw	low _control_4
  1076   0013BC  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1077   0013BE  0E00               	movlw	0
  1078   0013C0  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1079   0013C2  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1080   0013C6  6E61               	movwf	_ret^0,c
  1081   0013C8                     
  1082                           ;application.c: 227:                         ret = gpio_pin_write_logic(&control_5, GPIO
      +                          _LOGIC_HIGH);
  1083   0013C8  0E34               	movlw	low _control_5
  1084   0013CA  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1085   0013CC  0E01               	movlw	1
  1086   0013CE  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1087   0013D0  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1088   0013D4  6E61               	movwf	_ret^0,c
  1089   0013D6                     
  1090                           ;application.c: 228:                         ret = segment_write_number(&seg, seconds/10
      +                          );
  1091   0013D6  0E1F               	movlw	low _seg
  1092   0013D8  6E58               	movwf	segment_write_number@seg^0,c
  1093   0013DA  C03B  F050         	movff	_seconds,___awdiv@dividend
  1094   0013DE  6A51               	clrf	(___awdiv@dividend+1)^0,c
  1095   0013E0  0E00               	movlw	0
  1096   0013E2  6E53               	movwf	(___awdiv@divisor+1)^0,c
  1097   0013E4  0E0A               	movlw	10
  1098   0013E6  6E52               	movwf	___awdiv@divisor^0,c
  1099   0013E8  ECFA  F00B         	call	___awdiv	;wreg free
  1100   0013EC  5050               	movf	?___awdiv^0,w,c
  1101   0013EE  6E59               	movwf	segment_write_number@number^0,c
  1102   0013F0  EC9E  F00D         	call	_segment_write_number	;wreg free
  1103   0013F4  6E61               	movwf	_ret^0,c
  1104   0013F6                     
  1105                           ;application.c: 229:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
  1106   0013F6  0E09               	movlw	9
  1107   0013F8  6E5D               	movwf	??_main^0,c
  1108   0013FA  0EA7               	movlw	167
  1109   0013FC                     u2057:
  1110   0013FC  2EE8               	decfsz	wreg,f,c
  1111   0013FE  D7FE               	bra	u2057
  1112   001400  2E5D               	decfsz	??_main^0,f,c
  1113   001402  D7FC               	bra	u2057
  1114   001404  0000               	nop	
  1115                           
  1116                           ;application.c: 230:                         ret = gpio_pin_write_logic(&control_5, GPIO
      +                          _LOGIC_LOW);
  1117   001406  0E34               	movlw	low _control_5
  1118   001408  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1119   00140A  0E00               	movlw	0
  1120   00140C  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1121   00140E  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1122   001412  6E61               	movwf	_ret^0,c
  1123                           
  1124                           ;application.c: 232:                         ret = gpio_pin_write_logic(&control_6, GPIO
      +                          _LOGIC_HIGH);
  1125   001414  0E33               	movlw	low _control_6
  1126   001416  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1127   001418  0E01               	movlw	1
  1128   00141A  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1129   00141C  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1130   001420  6E61               	movwf	_ret^0,c
  1131                           
  1132                           ;application.c: 233:                         ret = segment_write_number(&seg, seconds%10
      +                          );
  1133   001422  0E1F               	movlw	low _seg
  1134   001424  6E58               	movwf	segment_write_number@seg^0,c
  1135   001426  C03B  F050         	movff	_seconds,___awmod@dividend
  1136   00142A  6A51               	clrf	(___awmod@dividend+1)^0,c
  1137   00142C  0E00               	movlw	0
  1138   00142E  6E53               	movwf	(___awmod@divisor+1)^0,c
  1139   001430  0E0A               	movlw	10
  1140   001432  6E52               	movwf	___awmod@divisor^0,c
  1141   001434  ECB5  F00C         	call	___awmod	;wreg free
  1142   001438  5050               	movf	?___awmod^0,w,c
  1143   00143A  6E59               	movwf	segment_write_number@number^0,c
  1144   00143C  EC9E  F00D         	call	_segment_write_number	;wreg free
  1145   001440  6E61               	movwf	_ret^0,c
  1146   001442                     
  1147                           ;application.c: 234:                         _delay((unsigned long)((3333)*(8000000UL/40
      +                          00000.0)));
  1148   001442  0E09               	movlw	9
  1149   001444  6E5D               	movwf	??_main^0,c
  1150   001446  0EA7               	movlw	167
  1151   001448                     u2067:
  1152   001448  2EE8               	decfsz	wreg,f,c
  1153   00144A  D7FE               	bra	u2067
  1154   00144C  2E5D               	decfsz	??_main^0,f,c
  1155   00144E  D7FC               	bra	u2067
  1156   001450  0000               	nop	
  1157   001452                     
  1158                           ;application.c: 235:                         ret = gpio_pin_write_logic(&control_6, GPIO
      +                          _LOGIC_LOW);
  1159   001452  0E33               	movlw	low _control_6
  1160   001454  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1161   001456  0E00               	movlw	0
  1162   001458  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1163   00145A  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1164   00145E  6E61               	movwf	_ret^0,c
  1165   001460                     
  1166                           ;application.c: 237:                         ret = Button_read(&start, &start_state);
  1167   001460  0E30               	movlw	low _start
  1168   001462  6E58               	movwf	Button_read@btn^0,c
  1169   001464  0E4F               	movlw	low _start_state
  1170   001466  6E59               	movwf	Button_read@_st^0,c
  1171   001468  EC5C  F00C         	call	_Button_read	;wreg free
  1172   00146C  6E61               	movwf	_ret^0,c
  1173   00146E                     
  1174                           ;application.c: 238:                         ret = Button_read(&reset, &reset_state);
  1175   00146E  0E24               	movlw	low _reset
  1176   001470  6E58               	movwf	Button_read@btn^0,c
  1177   001472  0E4D               	movlw	low _reset_state
  1178   001474  6E59               	movwf	Button_read@_st^0,c
  1179   001476  EC5C  F00C         	call	_Button_read	;wreg free
  1180   00147A  6E61               	movwf	_ret^0,c
  1181   00147C                     
  1182                           ;application.c: 239:                         if(start_state == BUTTON_PRESSED || reset_s
      +                          tate == BUTTON_PRESSED)
  1183   00147C  044F               	decf	_start_state^0,w,c
  1184   00147E  B4D8               	btfsc	status,2,c
  1185   001480  EF44  F00A         	goto	u1751
  1186   001484  EF46  F00A         	goto	u1750
  1187   001488                     u1751:
  1188   001488  EF4E  F00A         	goto	l2724
  1189   00148C                     u1750:
  1190   00148C  044D               	decf	_reset_state^0,w,c
  1191   00148E  A4D8               	btfss	status,2,c
  1192   001490  EF4C  F00A         	goto	u1761
  1193   001494  EF4E  F00A         	goto	u1760
  1194   001498                     u1761:
  1195   001498  EF44  F009         	goto	l2682
  1196   00149C                     u1760:
  1197   00149C                     l2724:
  1198                           
  1199                           ;application.c: 247:                 ret = Button_read(&stop, &stop_state);
  1200   00149C  0E2D               	movlw	low _stop
  1201   00149E  6E58               	movwf	Button_read@btn^0,c
  1202   0014A0  0E4E               	movlw	low _stop_state
  1203   0014A2  6E59               	movwf	Button_read@_st^0,c
  1204   0014A4  EC5C  F00C         	call	_Button_read	;wreg free
  1205   0014A8  6E61               	movwf	_ret^0,c
  1206   0014AA                     
  1207                           ;application.c: 248:                 if(stop_state == BUTTON_PRESSED)
  1208   0014AA  044E               	decf	_stop_state^0,w,c
  1209   0014AC  A4D8               	btfss	status,2,c
  1210   0014AE  EF5B  F00A         	goto	u1771
  1211   0014B2  EF5D  F00A         	goto	u1770
  1212   0014B6                     u1771:
  1213   0014B6  EF9C  F00A         	goto	l2742
  1214   0014BA                     u1770:
  1215   0014BA                     l2728:
  1216                           
  1217                           ;application.c: 251:                     {;application.c: 252:                         r
      +                          et = gpio_pin_write_logic(&control_1, GPIO_LOGIC_LOW);
  1218   0014BA  0E38               	movlw	low _control_1
  1219   0014BC  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1220   0014BE  0E00               	movlw	0
  1221   0014C0  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1222   0014C2  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1223   0014C6  6E61               	movwf	_ret^0,c
  1224                           
  1225                           ;application.c: 253:                         ret = gpio_pin_write_logic(&control_2, GPIO
      +                          _LOGIC_LOW);
  1226   0014C8  0E37               	movlw	low _control_2
  1227   0014CA  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1228   0014CC  0E00               	movlw	0
  1229   0014CE  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1230   0014D0  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1231   0014D4  6E61               	movwf	_ret^0,c
  1232                           
  1233                           ;application.c: 254:                         ret = gpio_pin_write_logic(&control_3, GPIO
      +                          _LOGIC_LOW);
  1234   0014D6  0E36               	movlw	low _control_3
  1235   0014D8  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1236   0014DA  0E00               	movlw	0
  1237   0014DC  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1238   0014DE  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1239   0014E2  6E61               	movwf	_ret^0,c
  1240                           
  1241                           ;application.c: 255:                         ret = gpio_pin_write_logic(&control_4, GPIO
      +                          _LOGIC_LOW);
  1242   0014E4  0E35               	movlw	low _control_4
  1243   0014E6  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1244   0014E8  0E00               	movlw	0
  1245   0014EA  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1246   0014EC  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1247   0014F0  6E61               	movwf	_ret^0,c
  1248                           
  1249                           ;application.c: 256:                         ret = gpio_pin_write_logic(&control_5, GPIO
      +                          _LOGIC_LOW);
  1250   0014F2  0E34               	movlw	low _control_5
  1251   0014F4  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1252   0014F6  0E00               	movlw	0
  1253   0014F8  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1254   0014FA  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1255   0014FE  6E61               	movwf	_ret^0,c
  1256                           
  1257                           ;application.c: 257:                         ret = gpio_pin_write_logic(&control_6, GPIO
      +                          _LOGIC_LOW);
  1258   001500  0E33               	movlw	low _control_6
  1259   001502  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1260   001504  0E00               	movlw	0
  1261   001506  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1262   001508  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1263   00150C  6E61               	movwf	_ret^0,c
  1264   00150E                     
  1265                           ;application.c: 258:                         hours = 0;
  1266   00150E  0E00               	movlw	0
  1267   001510  6E39               	movwf	_hours^0,c
  1268   001512                     
  1269                           ;application.c: 259:                         minutes = 0;
  1270   001512  0E00               	movlw	0
  1271   001514  6E3A               	movwf	_minutes^0,c
  1272   001516                     
  1273                           ;application.c: 260:                         seconds = 0;
  1274   001516  0E00               	movlw	0
  1275   001518  6E3B               	movwf	_seconds^0,c
  1276   00151A                     
  1277                           ;application.c: 261:                         ret = Button_read(&start, &start_state);
  1278   00151A  0E30               	movlw	low _start
  1279   00151C  6E58               	movwf	Button_read@btn^0,c
  1280   00151E  0E4F               	movlw	low _start_state
  1281   001520  6E59               	movwf	Button_read@_st^0,c
  1282   001522  EC5C  F00C         	call	_Button_read	;wreg free
  1283   001526  6E61               	movwf	_ret^0,c
  1284   001528                     
  1285                           ;application.c: 262:                         if(start_state == BUTTON_PRESSED)
  1286   001528  044F               	decf	_start_state^0,w,c
  1287   00152A  A4D8               	btfss	status,2,c
  1288   00152C  EF9A  F00A         	goto	u1781
  1289   001530  EF9C  F00A         	goto	u1780
  1290   001534                     u1781:
  1291   001534  EF5D  F00A         	goto	l2728
  1292   001538                     u1780:
  1293   001538                     l2742:
  1294                           
  1295                           ;application.c: 270:                 ret = Button_read(&reset, &reset_state);
  1296   001538  0E24               	movlw	low _reset
  1297   00153A  6E58               	movwf	Button_read@btn^0,c
  1298   00153C  0E4D               	movlw	low _reset_state
  1299   00153E  6E59               	movwf	Button_read@_st^0,c
  1300   001540  EC5C  F00C         	call	_Button_read	;wreg free
  1301   001544  6E61               	movwf	_ret^0,c
  1302   001546                     
  1303                           ;application.c: 271:                 if(reset_state == BUTTON_PRESSED)
  1304   001546  044D               	decf	_reset_state^0,w,c
  1305   001548  A4D8               	btfss	status,2,c
  1306   00154A  EFA9  F00A         	goto	u1791
  1307   00154E  EFAB  F00A         	goto	u1790
  1308   001552                     u1791:
  1309   001552  EFB1  F00A         	goto	l2748
  1310   001556                     u1790:
  1311   001556                     
  1312                           ;application.c: 272:                 {;application.c: 273:                     hours = 0
      +                          ;
  1313   001556  0E00               	movlw	0
  1314   001558  6E39               	movwf	_hours^0,c
  1315                           
  1316                           ;application.c: 274:                     minutes = 0;
  1317   00155A  0E00               	movlw	0
  1318   00155C  6E3A               	movwf	_minutes^0,c
  1319                           
  1320                           ;application.c: 275:                     seconds = 0;
  1321   00155E  0E00               	movlw	0
  1322   001560  6E3B               	movwf	_seconds^0,c
  1323   001562                     l2748:
  1324                           
  1325                           ;application.c: 277:             }
  1326   001562  2A5E               	incf	main@counter^0,f,c
  1327   001564                     l2750:
  1328   001564  505E               	movf	main@counter^0,w,c
  1329   001566  5C60               	subwf	main@delay_time^0,w,c
  1330   001568  B0D8               	btfsc	status,0,c
  1331   00156A  EFB9  F00A         	goto	u1801
  1332   00156E  EFBB  F00A         	goto	u1800
  1333   001572                     u1801:
  1334   001572  EF2C  F008         	goto	l2634
  1335   001576                     u1800:
  1336   001576                     
  1337                           ;application.c: 279:             seconds++;
  1338   001576  2A3B               	incf	_seconds^0,f,c
  1339   001578                     
  1340                           ;application.c: 280:             if(seconds == 60)
  1341   001578  0E3C               	movlw	60
  1342   00157A  183B               	xorwf	_seconds^0,w,c
  1343   00157C  A4D8               	btfss	status,2,c
  1344   00157E  EFC3  F00A         	goto	u1811
  1345   001582  EFC5  F00A         	goto	u1810
  1346   001586                     u1811:
  1347   001586  EFC8  F00A         	goto	l2760
  1348   00158A                     u1810:
  1349   00158A                     
  1350                           ;application.c: 281:             {;application.c: 282:                 minutes++;
  1351   00158A  2A3A               	incf	_minutes^0,f,c
  1352   00158C                     
  1353                           ;application.c: 283:                 seconds = 0;
  1354   00158C  0E00               	movlw	0
  1355   00158E  6E3B               	movwf	_seconds^0,c
  1356   001590                     l2760:
  1357                           
  1358                           ;application.c: 285:             if(minutes == 60)
  1359   001590  0E3C               	movlw	60
  1360   001592  183A               	xorwf	_minutes^0,w,c
  1361   001594  A4D8               	btfss	status,2,c
  1362   001596  EFCF  F00A         	goto	u1821
  1363   00159A  EFD1  F00A         	goto	u1820
  1364   00159E                     u1821:
  1365   00159E  EFD4  F00A         	goto	l2766
  1366   0015A2                     u1820:
  1367   0015A2                     
  1368                           ;application.c: 286:             {;application.c: 287:                 hours++;
  1369   0015A2  2A39               	incf	_hours^0,f,c
  1370   0015A4                     
  1371                           ;application.c: 288:                 minutes = 0;
  1372   0015A4  0E00               	movlw	0
  1373   0015A6  6E3A               	movwf	_minutes^0,c
  1374   0015A8                     l2766:
  1375                           
  1376                           ;application.c: 290:             if(hours > 99)
  1377   0015A8  0E63               	movlw	99
  1378   0015AA  6439               	cpfsgt	_hours^0,c
  1379   0015AC  EFDA  F00A         	goto	u1831
  1380   0015B0  EFDC  F00A         	goto	u1830
  1381   0015B4                     u1831:
  1382   0015B4  EF0F  F008         	goto	l2624
  1383   0015B8                     u1830:
  1384   0015B8                     
  1385                           ;application.c: 291:             {;application.c: 292:                 hours = 0;
  1386   0015B8  0E00               	movlw	0
  1387   0015BA  6E39               	movwf	_hours^0,c
  1388   0015BC  EF0F  F008         	goto	l2624
  1389   0015C0  EF00  F000         	goto	start
  1390   0015C4                     __end_of_main:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _segment_write_number *****************
  1394 ;; Defined at:
  1395 ;;		line 29 in file "ECU_layer/7_segment/segment.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  seg             1    8[COMRAM] PTR const struct .
  1398 ;;		 -> seg(5), 
  1399 ;;  number          1    9[COMRAM] unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  ret             1   10[COMRAM] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      unsigned char 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 1
  1418 ;; This function calls:
  1419 ;;		_gpio_pin_write_logic
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text1
  1426   001B3C                     __ptext1:
  1427                           	callstack 0
  1428   001B3C                     _segment_write_number:
  1429                           	callstack 29
  1430   001B3C                     
  1431                           ;ECU_layer/7_segment/segment.c: 32:     if(seg == ((void*)0) || number > 9)
  1432   001B3C  5058               	movf	segment_write_number@seg^0,w,c
  1433   001B3E  B4D8               	btfsc	status,2,c
  1434   001B40  EFA4  F00D         	goto	u1231
  1435   001B44  EFA6  F00D         	goto	u1230
  1436   001B48                     u1231:
  1437   001B48  EFAE  F00D         	goto	l2264
  1438   001B4C                     u1230:
  1439   001B4C  0E09               	movlw	9
  1440   001B4E  6459               	cpfsgt	segment_write_number@number^0,c
  1441   001B50  EFAC  F00D         	goto	u1241
  1442   001B54  EFAE  F00D         	goto	u1240
  1443   001B58                     u1241:
  1444   001B58  EFB2  F00D         	goto	l2266
  1445   001B5C                     u1240:
  1446   001B5C                     l2264:
  1447                           
  1448                           ;ECU_layer/7_segment/segment.c: 33:     {;ECU_layer/7_segment/segment.c: 34:         ret
      +                           = (Std_ReturnType) 0x00;
  1449   001B5C  0E00               	movlw	0
  1450   001B5E  6E5A               	movwf	segment_write_number@ret^0,c
  1451                           
  1452                           ;ECU_layer/7_segment/segment.c: 35:     }
  1453   001B60  EFD7  F00D         	goto	l2270
  1454   001B64                     l2266:
  1455                           
  1456                           ;ECU_layer/7_segment/segment.c: 37:     {;ECU_layer/7_segment/segment.c: 38:         gpi
      +                          o_pin_write_logic(&(seg->segment_pin[0]), ((number >> 0) & 0x01));
  1457   001B64  C058  F050         	movff	segment_write_number@seg,gpio_pin_write_logic@_pin_config
  1458   001B68  5059               	movf	segment_write_number@number^0,w,c
  1459   001B6A  0B01               	andlw	1
  1460   001B6C  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1461   001B6E  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1462                           
  1463                           ;ECU_layer/7_segment/segment.c: 39:         gpio_pin_write_logic(&(seg->segment_pin[1]),
      +                           ((number >> 1) & 0x01));
  1464   001B72  2858               	incf	segment_write_number@seg^0,w,c
  1465   001B74  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1466   001B76  90D8               	bcf	status,0,c
  1467   001B78  3059               	rrcf	segment_write_number@number^0,w,c
  1468   001B7A  0B01               	andlw	1
  1469   001B7C  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1470   001B7E  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1471                           
  1472                           ;ECU_layer/7_segment/segment.c: 40:         gpio_pin_write_logic(&(seg->segment_pin[2]),
      +                           ((number >> 2) & 0x01));
  1473   001B82  5058               	movf	segment_write_number@seg^0,w,c
  1474   001B84  0F02               	addlw	2
  1475   001B86  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1476   001B88  4059               	rrncf	segment_write_number@number^0,w,c
  1477   001B8A  42E8               	rrncf	wreg,f,c
  1478   001B8C  0B3F               	andlw	63
  1479   001B8E  0B01               	andlw	1
  1480   001B90  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1481   001B92  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1482                           
  1483                           ;ECU_layer/7_segment/segment.c: 41:         gpio_pin_write_logic(&(seg->segment_pin[3]),
      +                           ((number >> 3) & 0x01));
  1484   001B96  5058               	movf	segment_write_number@seg^0,w,c
  1485   001B98  0F03               	addlw	3
  1486   001B9A  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1487   001B9C  3859               	swapf	segment_write_number@number^0,w,c
  1488   001B9E  46E8               	rlncf	wreg,f,c
  1489   001BA0  0B1F               	andlw	31
  1490   001BA2  0B01               	andlw	1
  1491   001BA4  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1492   001BA6  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1493   001BAA                     
  1494                           ;ECU_layer/7_segment/segment.c: 42:         ret = (Std_ReturnType) 0x01;
  1495   001BAA  0E01               	movlw	1
  1496   001BAC  6E5A               	movwf	segment_write_number@ret^0,c
  1497   001BAE                     l2270:
  1498                           
  1499                           ;ECU_layer/7_segment/segment.c: 44:     return ret;
  1500   001BAE  505A               	movf	segment_write_number@ret^0,w,c
  1501   001BB0  0012               	return		;funcret
  1502   001BB2                     __end_of_segment_write_number:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _application_initialize *****************
  1506 ;; Defined at:
  1507 ;;		line 301 in file "application.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  ret             1   12[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 3
  1528 ;; This function calls:
  1529 ;;		_Button_initialize
  1530 ;;		_gpio_pin_initialize
  1531 ;;		_segment_inititalize
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text2
  1538   001AC2                     __ptext2:
  1539                           	callstack 0
  1540   001AC2                     _application_initialize:
  1541                           	callstack 27
  1542   001AC2                     
  1543                           ;application.c: 303:     Std_ReturnType ret;;application.c: 305:     ret = gpio_pin_init
      +                          ialize(&control_1);
  1544   001AC2  0E38               	movlw	low _control_1
  1545   001AC4  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1546   001AC6  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1547   001ACA  6E5C               	movwf	application_initialize@ret^0,c
  1548                           
  1549                           ;application.c: 306:     ret = gpio_pin_initialize(&control_2);
  1550   001ACC  0E37               	movlw	low _control_2
  1551   001ACE  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1552   001AD0  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1553   001AD4  6E5C               	movwf	application_initialize@ret^0,c
  1554                           
  1555                           ;application.c: 307:     ret = gpio_pin_initialize(&control_3);
  1556   001AD6  0E36               	movlw	low _control_3
  1557   001AD8  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1558   001ADA  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1559   001ADE  6E5C               	movwf	application_initialize@ret^0,c
  1560                           
  1561                           ;application.c: 308:     ret = gpio_pin_initialize(&control_4);
  1562   001AE0  0E35               	movlw	low _control_4
  1563   001AE2  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1564   001AE4  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1565   001AE8  6E5C               	movwf	application_initialize@ret^0,c
  1566                           
  1567                           ;application.c: 309:     ret = gpio_pin_initialize(&control_5);
  1568   001AEA  0E34               	movlw	low _control_5
  1569   001AEC  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1570   001AEE  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1571   001AF2  6E5C               	movwf	application_initialize@ret^0,c
  1572                           
  1573                           ;application.c: 310:     ret = gpio_pin_initialize(&control_6);
  1574   001AF4  0E33               	movlw	low _control_6
  1575   001AF6  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1576   001AF8  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1577   001AFC  6E5C               	movwf	application_initialize@ret^0,c
  1578                           
  1579                           ;application.c: 313:     ret = segment_inititalize(&seg);
  1580   001AFE  0E1F               	movlw	low _seg
  1581   001B00  6E5A               	movwf	segment_inititalize@seg^0,c
  1582   001B02  EC01  F00E         	call	_segment_inititalize	;wreg free
  1583   001B06  6E5C               	movwf	application_initialize@ret^0,c
  1584                           
  1585                           ;application.c: 316:     ret = Button_initialize(&start);
  1586   001B08  0E30               	movlw	low _start
  1587   001B0A  6E56               	movwf	Button_initialize@btn^0,c
  1588   001B0C  EC5E  F00E         	call	_Button_initialize	;wreg free
  1589   001B10  6E5C               	movwf	application_initialize@ret^0,c
  1590                           
  1591                           ;application.c: 317:     ret = Button_initialize(&stop);
  1592   001B12  0E2D               	movlw	low _stop
  1593   001B14  6E56               	movwf	Button_initialize@btn^0,c
  1594   001B16  EC5E  F00E         	call	_Button_initialize	;wreg free
  1595   001B1A  6E5C               	movwf	application_initialize@ret^0,c
  1596                           
  1597                           ;application.c: 318:     ret = Button_initialize(&pause);
  1598   001B1C  0E27               	movlw	low _pause
  1599   001B1E  6E56               	movwf	Button_initialize@btn^0,c
  1600   001B20  EC5E  F00E         	call	_Button_initialize	;wreg free
  1601   001B24  6E5C               	movwf	application_initialize@ret^0,c
  1602                           
  1603                           ;application.c: 319:     ret = Button_initialize(&speed_up);
  1604   001B26  0E2A               	movlw	low _speed_up
  1605   001B28  6E56               	movwf	Button_initialize@btn^0,c
  1606   001B2A  EC5E  F00E         	call	_Button_initialize	;wreg free
  1607   001B2E  6E5C               	movwf	application_initialize@ret^0,c
  1608                           
  1609                           ;application.c: 320:     ret = Button_initialize(&reset);
  1610   001B30  0E24               	movlw	low _reset
  1611   001B32  6E56               	movwf	Button_initialize@btn^0,c
  1612   001B34  EC5E  F00E         	call	_Button_initialize	;wreg free
  1613   001B38  6E5C               	movwf	application_initialize@ret^0,c
  1614   001B3A  0012               	return		;funcret
  1615   001B3C                     __end_of_application_initialize:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _segment_inititalize *****************
  1619 ;; Defined at:
  1620 ;;		line 11 in file "ECU_layer/7_segment/segment.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  seg             1   10[COMRAM] PTR const struct .
  1623 ;;		 -> seg(5), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  ret             1   11[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 2
  1642 ;; This function calls:
  1643 ;;		_gpio_pin_initialize
  1644 ;; This function is called by:
  1645 ;;		_application_initialize
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text3
  1650   001C02                     __ptext3:
  1651                           	callstack 0
  1652   001C02                     _segment_inititalize:
  1653                           	callstack 27
  1654   001C02                     
  1655                           ;ECU_layer/7_segment/segment.c: 14:     if(seg == ((void*)0))
  1656   001C02  505A               	movf	segment_inititalize@seg^0,w,c
  1657   001C04  A4D8               	btfss	status,2,c
  1658   001C06  EF07  F00E         	goto	u1171
  1659   001C0A  EF09  F00E         	goto	u1170
  1660   001C0E                     u1171:
  1661   001C0E  EF0D  F00E         	goto	l2224
  1662   001C12                     u1170:
  1663   001C12                     
  1664                           ;ECU_layer/7_segment/segment.c: 15:     {;ECU_layer/7_segment/segment.c: 16:         ret
      +                           = (Std_ReturnType) 0x00;
  1665   001C12  0E00               	movlw	0
  1666   001C14  6E5B               	movwf	segment_inititalize@ret^0,c
  1667                           
  1668                           ;ECU_layer/7_segment/segment.c: 17:     }
  1669   001C16  EF25  F00E         	goto	l2228
  1670   001C1A                     l2224:
  1671                           
  1672                           ;ECU_layer/7_segment/segment.c: 19:     {;ECU_layer/7_segment/segment.c: 20:         ret
      +                           = gpio_pin_initialize(&(seg->segment_pin[0]));
  1673   001C1A  C05A  F058         	movff	segment_inititalize@seg,gpio_pin_initialize@_pin_config
  1674   001C1E  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1675   001C22  6E5B               	movwf	segment_inititalize@ret^0,c
  1676                           
  1677                           ;ECU_layer/7_segment/segment.c: 21:         ret = gpio_pin_initialize(&(seg->segment_pin
      +                          [1]));
  1678   001C24  285A               	incf	segment_inititalize@seg^0,w,c
  1679   001C26  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1680   001C28  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1681   001C2C  6E5B               	movwf	segment_inititalize@ret^0,c
  1682                           
  1683                           ;ECU_layer/7_segment/segment.c: 22:         ret = gpio_pin_initialize(&(seg->segment_pin
      +                          [2]));
  1684   001C2E  505A               	movf	segment_inititalize@seg^0,w,c
  1685   001C30  0F02               	addlw	2
  1686   001C32  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1687   001C34  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1688   001C38  6E5B               	movwf	segment_inititalize@ret^0,c
  1689                           
  1690                           ;ECU_layer/7_segment/segment.c: 23:         ret = gpio_pin_initialize(&(seg->segment_pin
      +                          [3]));
  1691   001C3A  505A               	movf	segment_inititalize@seg^0,w,c
  1692   001C3C  0F03               	addlw	3
  1693   001C3E  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
  1694   001C40  ECD9  F00D         	call	_gpio_pin_initialize	;wreg free
  1695   001C44  6E5B               	movwf	segment_inititalize@ret^0,c
  1696   001C46                     
  1697                           ;ECU_layer/7_segment/segment.c: 24:         ret = (Std_ReturnType) 0x01;
  1698   001C46  0E01               	movlw	1
  1699   001C48  6E5B               	movwf	segment_inititalize@ret^0,c
  1700   001C4A                     l2228:
  1701                           
  1702                           ;ECU_layer/7_segment/segment.c: 26:     return ret;
  1703   001C4A  505B               	movf	segment_inititalize@ret^0,w,c
  1704   001C4C  0012               	return		;funcret
  1705   001C4E                     __end_of_segment_inititalize:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _gpio_pin_initialize *****************
  1709 ;; Defined at:
  1710 ;;		line 16 in file "MCAL_layer/GPIO/hal_gpio.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1713 ;;		 -> control_6(1), control_5(1), control_4(1), control_3(1), 
  1714 ;;		 -> control_2(1), control_1(1), seg$segment_pin(4), seg(5), 
  1715 ;;		 -> Relay_initialize@obj(1), led_initialize@obj(1), dc_motor_intitialize@obj2(1), dc_motor_intitialize@obj1(1), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  ret             1    0        unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		_gpio_pin_direction_initialize
  1736 ;;		_gpio_pin_write_logic
  1737 ;; This function is called by:
  1738 ;;		_segment_inititalize
  1739 ;;		_application_initialize
  1740 ;;		_dc_motor_intitialize
  1741 ;;		_led_initialize
  1742 ;;		_Relay_initialize
  1743 ;;		_keypad_initialize
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text4
  1748   001BB2                     __ptext4:
  1749                           	callstack 0
  1750   001BB2                     _gpio_pin_initialize:
  1751                           	callstack 27
  1752   001BB2                     
  1753                           ;MCAL_layer/GPIO/hal_gpio.c: 19:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1)
  1754   001BB2  5058               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1755   001BB4  B4D8               	btfsc	status,2,c
  1756   001BB6  EFDF  F00D         	goto	u1151
  1757   001BBA  EFE1  F00D         	goto	u1150
  1758   001BBE                     u1151:
  1759   001BBE  EFF1  F00D         	goto	l2210
  1760   001BC2                     u1150:
  1761   001BC2  5058               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1762   001BC4  6ED9               	movwf	fsr2l,c
  1763   001BC6  6ADA               	clrf	fsr2h,c
  1764   001BC8  30DF               	rrcf	223,w,c
  1765   001BCA  32E8               	rrcf	wreg,f,c
  1766   001BCC  32E8               	rrcf	wreg,f,c
  1767   001BCE  0B07               	andlw	7
  1768   001BD0  6E59               	movwf	??_gpio_pin_initialize^0,c
  1769   001BD2  0E07               	movlw	7
  1770   001BD4  6459               	cpfsgt	??_gpio_pin_initialize^0,c
  1771   001BD6  EFEF  F00D         	goto	u1161
  1772   001BDA  EFF1  F00D         	goto	u1160
  1773   001BDE                     u1161:
  1774   001BDE  EFF3  F00D         	goto	l2212
  1775   001BE2                     u1160:
  1776   001BE2                     l2210:
  1777                           
  1778                           ;MCAL_layer/GPIO/hal_gpio.c: 22:     }
  1779   001BE2  EFFF  F00D         	goto	l2216
  1780   001BE6                     l2212:
  1781                           
  1782                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     {;MCAL_layer/GPIO/hal_gpio.c: 25:         gpio_pin_
      +                          direction_initialize(_pin_config);
  1783   001BE6  C058  F050         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1784   001BEA  ECE2  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1785                           
  1786                           ;MCAL_layer/GPIO/hal_gpio.c: 26:         gpio_pin_write_logic(_pin_config ,GPIO_LOGIC_LO
      +                          W);
  1787   001BEE  C058  F050         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1788   001BF2  0E00               	movlw	0
  1789   001BF4  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1790   001BF6  EC72  F00B         	call	_gpio_pin_write_logic	;wreg free
  1791   001BFA  EFF1  F00D         	goto	l2210
  1792   001BFE                     l2216:
  1793                           
  1794                           ;MCAL_layer/GPIO/hal_gpio.c: 29:     return ret;
  1795   001BFE  0E00               	movlw	0
  1796   001C00  0012               	return		;funcret
  1797   001C02                     __end_of_gpio_pin_initialize:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _gpio_pin_write_logic *****************
  1801 ;; Defined at:
  1802 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1805 ;;		 -> control_6(1), control_5(1), control_4(1), control_3(1), 
  1806 ;;		 -> control_2(1), control_1(1), seg$segment_pin(4), seg(5), 
  1807 ;;		 -> Relay_turn_off@obj(1), Relay_turn_on@obj(1), Relay_initialize@obj(1), led_turn_off@obj(1), 
  1808 ;;		 -> led_turn_on@obj(1), led_initialize@obj(1), dc_motor_stop@obj2(1), dc_motor_stop@obj1(1), 
  1809 ;;		 -> dc_motor_move_left@obj2(1), dc_motor_move_left@obj1(1), dc_motor_move_right@obj2(1), dc_motor_move_right@obj1(1)
      +, 
  1810 ;;		 -> dc_motor_intitialize@obj2(1), dc_motor_intitialize@obj1(1), 
  1811 ;;  logic           1    1[COMRAM] enum E2821
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  ret             1    7[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:        8 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_segment_write_number
  1833 ;;		_gpio_pin_initialize
  1834 ;;		_main
  1835 ;;		_dc_motor_move_right
  1836 ;;		_dc_motor_move_left
  1837 ;;		_dc_motor_stop
  1838 ;;		_led_turn_on
  1839 ;;		_led_turn_off
  1840 ;;		_Relay_turn_on
  1841 ;;		_Relay_turn_off
  1842 ;;		_keypad_get_value
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text5
  1847   0016E4                     __ptext5:
  1848                           	callstack 0
  1849   0016E4                     _gpio_pin_write_logic:
  1850                           	callstack 29
  1851   0016E4                     
  1852                           ;MCAL_layer/GPIO/hal_gpio.c: 93: Std_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config , logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 94: {;MCAL_layer/GPIO/hal_gpio
      +                          .c: 95:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  1853   0016E4  0E01               	movlw	1
  1854   0016E6  6E57               	movwf	gpio_pin_write_logic@ret^0,c
  1855                           
  1856                           ;MCAL_layer/GPIO/hal_gpio.c: 96:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1)
  1857   0016E8  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1858   0016EA  B4D8               	btfsc	status,2,c
  1859   0016EC  EF7A  F00B         	goto	u1051
  1860   0016F0  EF7C  F00B         	goto	u1050
  1861   0016F4                     u1051:
  1862   0016F4  EF8C  F00B         	goto	l2166
  1863   0016F8                     u1050:
  1864   0016F8  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1865   0016FA  6ED9               	movwf	fsr2l,c
  1866   0016FC  6ADA               	clrf	fsr2h,c
  1867   0016FE  30DF               	rrcf	223,w,c
  1868   001700  32E8               	rrcf	wreg,f,c
  1869   001702  32E8               	rrcf	wreg,f,c
  1870   001704  0B07               	andlw	7
  1871   001706  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1872   001708  0E07               	movlw	7
  1873   00170A  6452               	cpfsgt	??_gpio_pin_write_logic^0,c
  1874   00170C  EF8A  F00B         	goto	u1061
  1875   001710  EF8C  F00B         	goto	u1060
  1876   001714                     u1061:
  1877   001714  EFE3  F00B         	goto	l2174
  1878   001718                     u1060:
  1879   001718                     l2166:
  1880                           
  1881                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     {;MCAL_layer/GPIO/hal_gpio.c: 98:         ret = (St
      +                          d_ReturnType) 0x00;
  1882   001718  0E00               	movlw	0
  1883   00171A  6E57               	movwf	gpio_pin_write_logic@ret^0,c
  1884                           
  1885                           ;MCAL_layer/GPIO/hal_gpio.c: 99:     }
  1886   00171C  EFF8  F00B         	goto	l2176
  1887   001720                     l2168:
  1888                           
  1889                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~(1 << _pin_config->pin));
  1890   001720  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1891   001722  6ED9               	movwf	fsr2l,c
  1892   001724  6ADA               	clrf	fsr2h,c
  1893   001726  30DF               	rrcf	223,w,c
  1894   001728  32E8               	rrcf	wreg,f,c
  1895   00172A  32E8               	rrcf	wreg,f,c
  1896   00172C  0B07               	andlw	7
  1897   00172E  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1898   001730  0E01               	movlw	1
  1899   001732  6E53               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1900   001734  2A52               	incf	??_gpio_pin_write_logic^0,f,c
  1901   001736  EF9F  F00B         	goto	u1074
  1902   00173A                     u1075:
  1903   00173A  90D8               	bcf	status,0,c
  1904   00173C  3653               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1905   00173E                     u1074:
  1906   00173E  2E52               	decfsz	??_gpio_pin_write_logic^0,f,c
  1907   001740  EF9D  F00B         	goto	u1075
  1908   001744  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1909   001746  0AFF               	xorlw	255
  1910   001748  6E54               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1911   00174A  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1912   00174C  6ED9               	movwf	fsr2l,c
  1913   00174E  6ADA               	clrf	fsr2h,c
  1914   001750  50DF               	movf	223,w,c
  1915   001752  0B07               	andlw	7
  1916   001754  0D02               	mullw	2
  1917   001756  50F3               	movf	243,w,c
  1918   001758  0F0B               	addlw	low _lat_registers
  1919   00175A  6ED9               	movwf	fsr2l,c
  1920   00175C  6ADA               	clrf	fsr2h,c
  1921   00175E  CFDE F055          	movff	postinc2,??_gpio_pin_write_logic+3
  1922   001762  CFDD F056          	movff	postdec2,??_gpio_pin_write_logic+4
  1923   001766  C055  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1924   00176A  C056  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1925   00176E  5054               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1926   001770  16DF               	andwf	indf2,f,c
  1927                           
  1928                           ;MCAL_layer/GPIO/hal_gpio.c: 106:                 break;
  1929   001772  EFF8  F00B         	goto	l2176
  1930   001776                     l2170:
  1931                           
  1932                           ;MCAL_layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          (1 << _pin_config->pin));
  1933   001776  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1934   001778  6ED9               	movwf	fsr2l,c
  1935   00177A  6ADA               	clrf	fsr2h,c
  1936   00177C  30DF               	rrcf	223,w,c
  1937   00177E  32E8               	rrcf	wreg,f,c
  1938   001780  32E8               	rrcf	wreg,f,c
  1939   001782  0B07               	andlw	7
  1940   001784  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1941   001786  0E01               	movlw	1
  1942   001788  6E53               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1943   00178A  2A52               	incf	??_gpio_pin_write_logic^0,f,c
  1944   00178C  EFCA  F00B         	goto	u1084
  1945   001790                     u1085:
  1946   001790  90D8               	bcf	status,0,c
  1947   001792  3653               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1948   001794                     u1084:
  1949   001794  2E52               	decfsz	??_gpio_pin_write_logic^0,f,c
  1950   001796  EFC8  F00B         	goto	u1085
  1951   00179A  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1952   00179C  6ED9               	movwf	fsr2l,c
  1953   00179E  6ADA               	clrf	fsr2h,c
  1954   0017A0  50DF               	movf	223,w,c
  1955   0017A2  0B07               	andlw	7
  1956   0017A4  0D02               	mullw	2
  1957   0017A6  50F3               	movf	243,w,c
  1958   0017A8  0F0B               	addlw	low _lat_registers
  1959   0017AA  6ED9               	movwf	fsr2l,c
  1960   0017AC  6ADA               	clrf	fsr2h,c
  1961   0017AE  CFDE F054          	movff	postinc2,??_gpio_pin_write_logic+2
  1962   0017B2  CFDD F055          	movff	postdec2,??_gpio_pin_write_logic+3
  1963   0017B6  C054  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1964   0017BA  C055  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1965   0017BE  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1966   0017C0  12DF               	iorwf	indf2,f,c
  1967                           
  1968                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                 break;
  1969   0017C2  EFF8  F00B         	goto	l2176
  1970   0017C6                     l2174:
  1971   0017C6  5051               	movf	gpio_pin_write_logic@logic^0,w,c
  1972   0017C8  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1973   0017CA  6A53               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982   0017CC  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1983   0017CE  0A00               	xorlw	0	; case 0
  1984   0017D0  B4D8               	btfsc	status,2,c
  1985   0017D2  EFED  F00B         	goto	l2866
  1986   0017D6  EF8C  F00B         	goto	l2166
  1987   0017DA                     l2866:
  1988                           
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 2, Range of values is 0 to 1
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte            7     4 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995   0017DA  5052               	movf	??_gpio_pin_write_logic^0,w,c
  1996   0017DC  0A00               	xorlw	0	; case 0
  1997   0017DE  B4D8               	btfsc	status,2,c
  1998   0017E0  EF90  F00B         	goto	l2168
  1999   0017E4  0A01               	xorlw	1	; case 1
  2000   0017E6  B4D8               	btfsc	status,2,c
  2001   0017E8  EFBB  F00B         	goto	l2170
  2002   0017EC  EF8C  F00B         	goto	l2166
  2003   0017F0                     l2176:
  2004                           
  2005                           ;MCAL_layer/GPIO/hal_gpio.c: 114:     return ret;
  2006   0017F0  5057               	movf	gpio_pin_write_logic@ret^0,w,c
  2007   0017F2  0012               	return		;funcret
  2008   0017F4                     __end_of_gpio_pin_write_logic:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _Button_initialize *****************
  2012 ;; Defined at:
  2013 ;;		line 16 in file "ECU_layer/Button/Button.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  btn             1    6[COMRAM] PTR const struct .
  2016 ;;		 -> reset(3), pause(3), speed_up(3), stop(3), 
  2017 ;;		 -> start(3), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  ret             1    7[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 1
  2036 ;; This function calls:
  2037 ;;		_gpio_pin_direction_initialize
  2038 ;; This function is called by:
  2039 ;;		_application_initialize
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text6
  2044   001CBC                     __ptext6:
  2045                           	callstack 0
  2046   001CBC                     _Button_initialize:
  2047                           	callstack 28
  2048   001CBC                     
  2049                           ;ECU_layer/Button/Button.c: 19:     if(btn == ((void*)0))
  2050   001CBC  5056               	movf	Button_initialize@btn^0,w,c
  2051   001CBE  A4D8               	btfss	status,2,c
  2052   001CC0  EF64  F00E         	goto	u1181
  2053   001CC4  EF66  F00E         	goto	u1180
  2054   001CC8                     u1181:
  2055   001CC8  EF6A  F00E         	goto	l2236
  2056   001CCC                     u1180:
  2057   001CCC                     
  2058                           ;ECU_layer/Button/Button.c: 20:     {;ECU_layer/Button/Button.c: 21:         ret = (Std_
      +                          ReturnType) 0x00;
  2059   001CCC  0E00               	movlw	0
  2060   001CCE  6E57               	movwf	Button_initialize@ret^0,c
  2061                           
  2062                           ;ECU_layer/Button/Button.c: 22:     }
  2063   001CD0  EF70  F00E         	goto	l2240
  2064   001CD4                     l2236:
  2065                           
  2066                           ;ECU_layer/Button/Button.c: 24:     {;ECU_layer/Button/Button.c: 25:         gpio_pin_di
      +                          rection_initialize(&btn->button);
  2067   001CD4  C056  F050         	movff	Button_initialize@btn,gpio_pin_direction_initialize@_pin_config
  2068   001CD8  ECE2  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  2069   001CDC                     
  2070                           ;ECU_layer/Button/Button.c: 26:         ret = (Std_ReturnType) 0x01;
  2071   001CDC  0E01               	movlw	1
  2072   001CDE  6E57               	movwf	Button_initialize@ret^0,c
  2073   001CE0                     l2240:
  2074                           
  2075                           ;ECU_layer/Button/Button.c: 28:     return ret;
  2076   001CE0  5057               	movf	Button_initialize@ret^0,w,c
  2077   001CE2  0012               	return		;funcret
  2078   001CE4                     __end_of_Button_initialize:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _gpio_pin_direction_initialize *****************
  2082 ;; Defined at:
  2083 ;;		line 39 in file "MCAL_layer/GPIO/hal_gpio.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2086 ;;		 -> control_6(1), control_5(1), control_4(1), control_3(1), 
  2087 ;;		 -> control_2(1), control_1(1), seg$segment_pin(4), seg(5), 
  2088 ;;		 -> reset(3), pause(3), speed_up(3), stop(3), 
  2089 ;;		 -> start(3), Relay_initialize@obj(1), led_initialize@obj(1), dc_motor_intitialize@obj2(1), 
  2090 ;;		 -> dc_motor_intitialize@obj1(1), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  ret             1    0        unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      unsigned char 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;Total ram usage:        6 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_Button_initialize
  2112 ;;		_gpio_pin_initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text7
  2117   0015C4                     __ptext7:
  2118                           	callstack 0
  2119   0015C4                     _gpio_pin_direction_initialize:
  2120                           	callstack 27
  2121   0015C4                     
  2122                           ;MCAL_layer/GPIO/hal_gpio.c: 42:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1)
  2123   0015C4  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2124   0015C6  B4D8               	btfsc	status,2,c
  2125   0015C8  EFE8  F00A         	goto	u1091
  2126   0015CC  EFEA  F00A         	goto	u1090
  2127   0015D0                     u1091:
  2128   0015D0  EFFA  F00A         	goto	l2188
  2129   0015D4                     u1090:
  2130   0015D4  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2131   0015D6  6ED9               	movwf	fsr2l,c
  2132   0015D8  6ADA               	clrf	fsr2h,c
  2133   0015DA  30DF               	rrcf	223,w,c
  2134   0015DC  32E8               	rrcf	wreg,f,c
  2135   0015DE  32E8               	rrcf	wreg,f,c
  2136   0015E0  0B07               	andlw	7
  2137   0015E2  6E51               	movwf	??_gpio_pin_direction_initialize^0,c
  2138   0015E4  0E07               	movlw	7
  2139   0015E6  6451               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2140   0015E8  EFF8  F00A         	goto	u1101
  2141   0015EC  EFFA  F00A         	goto	u1100
  2142   0015F0                     u1101:
  2143   0015F0  EF51  F00B         	goto	l2196
  2144   0015F4                     u1100:
  2145   0015F4                     l2188:
  2146                           
  2147                           ;MCAL_layer/GPIO/hal_gpio.c: 45:     }
  2148   0015F4  EF71  F00B         	goto	l424
  2149   0015F8                     l2190:
  2150                           
  2151                           ;MCAL_layer/GPIO/hal_gpio.c: 51:                 (*(tris_registers[_pin_config->port]) &
      +                          = ~(1 << _pin_config->pin));
  2152   0015F8  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2153   0015FA  6ED9               	movwf	fsr2l,c
  2154   0015FC  6ADA               	clrf	fsr2h,c
  2155   0015FE  30DF               	rrcf	223,w,c
  2156   001600  32E8               	rrcf	wreg,f,c
  2157   001602  32E8               	rrcf	wreg,f,c
  2158   001604  0B07               	andlw	7
  2159   001606  6E51               	movwf	??_gpio_pin_direction_initialize^0,c
  2160   001608  0E01               	movlw	1
  2161   00160A  6E52               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2162   00160C  2A51               	incf	??_gpio_pin_direction_initialize^0,f,c
  2163   00160E  EF0B  F00B         	goto	u1114
  2164   001612                     u1115:
  2165   001612  90D8               	bcf	status,0,c
  2166   001614  3652               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2167   001616                     u1114:
  2168   001616  2E51               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2169   001618  EF09  F00B         	goto	u1115
  2170   00161C  5052               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2171   00161E  0AFF               	xorlw	255
  2172   001620  6E53               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2173   001622  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2174   001624  6ED9               	movwf	fsr2l,c
  2175   001626  6ADA               	clrf	fsr2h,c
  2176   001628  50DF               	movf	223,w,c
  2177   00162A  0B07               	andlw	7
  2178   00162C  0D02               	mullw	2
  2179   00162E  50F3               	movf	243,w,c
  2180   001630  0F15               	addlw	low _tris_registers
  2181   001632  6ED9               	movwf	fsr2l,c
  2182   001634  6ADA               	clrf	fsr2h,c
  2183   001636  CFDE F054          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2184   00163A  CFDD F055          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2185   00163E  C054  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2186   001642  C055  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2187   001646  5053               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2188   001648  16DF               	andwf	indf2,f,c
  2189                           
  2190                           ;MCAL_layer/GPIO/hal_gpio.c: 52:                 break;
  2191   00164A  EF71  F00B         	goto	l2198
  2192   00164E                     l2192:
  2193                           
  2194                           ;MCAL_layer/GPIO/hal_gpio.c: 54:                 (*(tris_registers[_pin_config->port]) |
      +                          = (1 << _pin_config->pin));
  2195   00164E  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2196   001650  6ED9               	movwf	fsr2l,c
  2197   001652  6ADA               	clrf	fsr2h,c
  2198   001654  30DF               	rrcf	223,w,c
  2199   001656  32E8               	rrcf	wreg,f,c
  2200   001658  32E8               	rrcf	wreg,f,c
  2201   00165A  0B07               	andlw	7
  2202   00165C  6E51               	movwf	??_gpio_pin_direction_initialize^0,c
  2203   00165E  0E01               	movlw	1
  2204   001660  6E52               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2205   001662  2A51               	incf	??_gpio_pin_direction_initialize^0,f,c
  2206   001664  EF36  F00B         	goto	u1124
  2207   001668                     u1125:
  2208   001668  90D8               	bcf	status,0,c
  2209   00166A  3652               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2210   00166C                     u1124:
  2211   00166C  2E51               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2212   00166E  EF34  F00B         	goto	u1125
  2213   001672  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2214   001674  6ED9               	movwf	fsr2l,c
  2215   001676  6ADA               	clrf	fsr2h,c
  2216   001678  50DF               	movf	223,w,c
  2217   00167A  0B07               	andlw	7
  2218   00167C  0D02               	mullw	2
  2219   00167E  50F3               	movf	243,w,c
  2220   001680  0F15               	addlw	low _tris_registers
  2221   001682  6ED9               	movwf	fsr2l,c
  2222   001684  6ADA               	clrf	fsr2h,c
  2223   001686  CFDE F053          	movff	postinc2,??_gpio_pin_direction_initialize+2
  2224   00168A  CFDD F054          	movff	postdec2,??_gpio_pin_direction_initialize+3
  2225   00168E  C053  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  2226   001692  C054  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  2227   001696  5052               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2228   001698  12DF               	iorwf	indf2,f,c
  2229                           
  2230                           ;MCAL_layer/GPIO/hal_gpio.c: 55:                 break;
  2231   00169A  EF71  F00B         	goto	l2198
  2232   00169E                     l2194:
  2233                           
  2234                           ;MCAL_layer/GPIO/hal_gpio.c: 58:         }
  2235   00169E  EF71  F00B         	goto	l2198
  2236   0016A2                     l2196:
  2237   0016A2  5050               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2238   0016A4  6ED9               	movwf	fsr2l,c
  2239   0016A6  6ADA               	clrf	fsr2h,c
  2240   0016A8  BEDF               	btfsc	indf2,7,c
  2241   0016AA  EF59  F00B         	goto	u1131
  2242   0016AE  EF5C  F00B         	goto	u1130
  2243   0016B2                     u1131:
  2244   0016B2  0E01               	movlw	1
  2245   0016B4  EF5D  F00B         	goto	u1140
  2246   0016B8                     u1130:
  2247   0016B8  0E00               	movlw	0
  2248   0016BA                     u1140:
  2249   0016BA  6E51               	movwf	??_gpio_pin_direction_initialize^0,c
  2250   0016BC  6A52               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2251                           
  2252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2253                           ; Switch size 1, requested type "simple"
  2254                           ; Number of cases is 1, Range of values is 0 to 0
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte            4     3 (average)
  2258                           ;	Chosen strategy is simple_byte
  2259   0016BE  5052               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2260   0016C0  0A00               	xorlw	0	; case 0
  2261   0016C2  B4D8               	btfsc	status,2,c
  2262   0016C4  EF66  F00B         	goto	l2868
  2263   0016C8  EF4F  F00B         	goto	l2194
  2264   0016CC                     l2868:
  2265                           
  2266                           ; Switch size 1, requested type "simple"
  2267                           ; Number of cases is 2, Range of values is 0 to 1
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte            7     4 (average)
  2271                           ;	Chosen strategy is simple_byte
  2272   0016CC  5051               	movf	??_gpio_pin_direction_initialize^0,w,c
  2273   0016CE  0A00               	xorlw	0	; case 0
  2274   0016D0  B4D8               	btfsc	status,2,c
  2275   0016D2  EFFC  F00A         	goto	l2190
  2276   0016D6  0A01               	xorlw	1	; case 1
  2277   0016D8  B4D8               	btfsc	status,2,c
  2278   0016DA  EF27  F00B         	goto	l2192
  2279   0016DE  EF4F  F00B         	goto	l2194
  2280   0016E2                     l2198:
  2281   0016E2                     l424:
  2282   0016E2  0012               	return		;funcret
  2283   0016E4                     __end_of_gpio_pin_direction_initialize:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function ___awmod *****************
  2287 ;; Defined at:
  2288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  dividend        2    0[COMRAM] int 
  2291 ;;  divisor         2    2[COMRAM] int 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  sign            1    5[COMRAM] unsigned char 
  2294 ;;  counter         1    4[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2    0[COMRAM] int 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        6 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text8
  2318   00196A                     __ptext8:
  2319                           	callstack 0
  2320   00196A                     ___awmod:
  2321                           	callstack 30
  2322   00196A  0E00               	movlw	0
  2323   00196C  6E55               	movwf	___awmod@sign^0,c
  2324   00196E  BE51               	btfsc	(___awmod@dividend+1)^0,7,c
  2325   001970  EFBE  F00C         	goto	u1410
  2326   001974  EFBC  F00C         	goto	u1411
  2327   001978                     u1411:
  2328   001978  EFC4  F00C         	goto	l2388
  2329   00197C                     u1410:
  2330   00197C  6C50               	negf	___awmod@dividend^0,c
  2331   00197E  1E51               	comf	(___awmod@dividend+1)^0,f,c
  2332   001980  B0D8               	btfsc	status,0,c
  2333   001982  2A51               	incf	(___awmod@dividend+1)^0,f,c
  2334   001984  0E01               	movlw	1
  2335   001986  6E55               	movwf	___awmod@sign^0,c
  2336   001988                     l2388:
  2337   001988  BE53               	btfsc	(___awmod@divisor+1)^0,7,c
  2338   00198A  EFCB  F00C         	goto	u1420
  2339   00198E  EFC9  F00C         	goto	u1421
  2340   001992                     u1421:
  2341   001992  EFCF  F00C         	goto	l2392
  2342   001996                     u1420:
  2343   001996  6C52               	negf	___awmod@divisor^0,c
  2344   001998  1E53               	comf	(___awmod@divisor+1)^0,f,c
  2345   00199A  B0D8               	btfsc	status,0,c
  2346   00199C  2A53               	incf	(___awmod@divisor+1)^0,f,c
  2347   00199E                     l2392:
  2348   00199E  5052               	movf	___awmod@divisor^0,w,c
  2349   0019A0  1053               	iorwf	(___awmod@divisor+1)^0,w,c
  2350   0019A2  B4D8               	btfsc	status,2,c
  2351   0019A4  EFD6  F00C         	goto	u1431
  2352   0019A8  EFD8  F00C         	goto	u1430
  2353   0019AC                     u1431:
  2354   0019AC  EFFC  F00C         	goto	l2408
  2355   0019B0                     u1430:
  2356   0019B0  0E01               	movlw	1
  2357   0019B2  6E54               	movwf	___awmod@counter^0,c
  2358   0019B4  EFE0  F00C         	goto	l2398
  2359   0019B8                     l2396:
  2360   0019B8  90D8               	bcf	status,0,c
  2361   0019BA  3652               	rlcf	___awmod@divisor^0,f,c
  2362   0019BC  3653               	rlcf	(___awmod@divisor+1)^0,f,c
  2363   0019BE  2A54               	incf	___awmod@counter^0,f,c
  2364   0019C0                     l2398:
  2365   0019C0  AE53               	btfss	(___awmod@divisor+1)^0,7,c
  2366   0019C2  EFE5  F00C         	goto	u1441
  2367   0019C6  EFE7  F00C         	goto	u1440
  2368   0019CA                     u1441:
  2369   0019CA  EFDC  F00C         	goto	l2396
  2370   0019CE                     u1440:
  2371   0019CE                     l2400:
  2372   0019CE  5052               	movf	___awmod@divisor^0,w,c
  2373   0019D0  5C50               	subwf	___awmod@dividend^0,w,c
  2374   0019D2  5053               	movf	(___awmod@divisor+1)^0,w,c
  2375   0019D4  5851               	subwfb	(___awmod@dividend+1)^0,w,c
  2376   0019D6  A0D8               	btfss	status,0,c
  2377   0019D8  EFF0  F00C         	goto	u1451
  2378   0019DC  EFF2  F00C         	goto	u1450
  2379   0019E0                     u1451:
  2380   0019E0  EFF6  F00C         	goto	l2404
  2381   0019E4                     u1450:
  2382   0019E4  5052               	movf	___awmod@divisor^0,w,c
  2383   0019E6  5E50               	subwf	___awmod@dividend^0,f,c
  2384   0019E8  5053               	movf	(___awmod@divisor+1)^0,w,c
  2385   0019EA  5A51               	subwfb	(___awmod@dividend+1)^0,f,c
  2386   0019EC                     l2404:
  2387   0019EC  90D8               	bcf	status,0,c
  2388   0019EE  3253               	rrcf	(___awmod@divisor+1)^0,f,c
  2389   0019F0  3252               	rrcf	___awmod@divisor^0,f,c
  2390   0019F2  2E54               	decfsz	___awmod@counter^0,f,c
  2391   0019F4  EFE7  F00C         	goto	l2400
  2392   0019F8                     l2408:
  2393   0019F8  5055               	movf	___awmod@sign^0,w,c
  2394   0019FA  B4D8               	btfsc	status,2,c
  2395   0019FC  EF02  F00D         	goto	u1461
  2396   001A00  EF04  F00D         	goto	u1460
  2397   001A04                     u1461:
  2398   001A04  EF08  F00D         	goto	l2412
  2399   001A08                     u1460:
  2400   001A08  6C50               	negf	___awmod@dividend^0,c
  2401   001A0A  1E51               	comf	(___awmod@dividend+1)^0,f,c
  2402   001A0C  B0D8               	btfsc	status,0,c
  2403   001A0E  2A51               	incf	(___awmod@dividend+1)^0,f,c
  2404   001A10                     l2412:
  2405   001A10  C050  F050         	movff	___awmod@dividend,?___awmod
  2406   001A14  C051  F051         	movff	___awmod@dividend+1,?___awmod+1
  2407   001A18  0012               	return		;funcret
  2408   001A1A                     __end_of___awmod:
  2409                           	callstack 0
  2410                           
  2411 ;; *************** function ___awdiv *****************
  2412 ;; Defined at:
  2413 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  dividend        2    0[COMRAM] int 
  2416 ;;  divisor         2    2[COMRAM] int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  quotient        2    6[COMRAM] int 
  2419 ;;  sign            1    5[COMRAM] unsigned char 
  2420 ;;  counter         1    4[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2    0[COMRAM] int 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:        8 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text9
  2444   0017F4                     __ptext9:
  2445                           	callstack 0
  2446   0017F4                     ___awdiv:
  2447                           	callstack 30
  2448   0017F4  0E00               	movlw	0
  2449   0017F6  6E55               	movwf	___awdiv@sign^0,c
  2450   0017F8  BE53               	btfsc	(___awdiv@divisor+1)^0,7,c
  2451   0017FA  EF03  F00C         	goto	u1350
  2452   0017FE  EF01  F00C         	goto	u1351
  2453   001802                     u1351:
  2454   001802  EF09  F00C         	goto	l2344
  2455   001806                     u1350:
  2456   001806  6C52               	negf	___awdiv@divisor^0,c
  2457   001808  1E53               	comf	(___awdiv@divisor+1)^0,f,c
  2458   00180A  B0D8               	btfsc	status,0,c
  2459   00180C  2A53               	incf	(___awdiv@divisor+1)^0,f,c
  2460   00180E  0E01               	movlw	1
  2461   001810  6E55               	movwf	___awdiv@sign^0,c
  2462   001812                     l2344:
  2463   001812  BE51               	btfsc	(___awdiv@dividend+1)^0,7,c
  2464   001814  EF10  F00C         	goto	u1360
  2465   001818  EF0E  F00C         	goto	u1361
  2466   00181C                     u1361:
  2467   00181C  EF16  F00C         	goto	l2350
  2468   001820                     u1360:
  2469   001820  6C50               	negf	___awdiv@dividend^0,c
  2470   001822  1E51               	comf	(___awdiv@dividend+1)^0,f,c
  2471   001824  B0D8               	btfsc	status,0,c
  2472   001826  2A51               	incf	(___awdiv@dividend+1)^0,f,c
  2473   001828  0E01               	movlw	1
  2474   00182A  1A55               	xorwf	___awdiv@sign^0,f,c
  2475   00182C                     l2350:
  2476   00182C  0E00               	movlw	0
  2477   00182E  6E57               	movwf	(___awdiv@quotient+1)^0,c
  2478   001830  0E00               	movlw	0
  2479   001832  6E56               	movwf	___awdiv@quotient^0,c
  2480   001834  5052               	movf	___awdiv@divisor^0,w,c
  2481   001836  1053               	iorwf	(___awdiv@divisor+1)^0,w,c
  2482   001838  B4D8               	btfsc	status,2,c
  2483   00183A  EF21  F00C         	goto	u1371
  2484   00183E  EF23  F00C         	goto	u1370
  2485   001842                     u1371:
  2486   001842  EF4B  F00C         	goto	l2372
  2487   001846                     u1370:
  2488   001846  0E01               	movlw	1
  2489   001848  6E54               	movwf	___awdiv@counter^0,c
  2490   00184A  EF2B  F00C         	goto	l2358
  2491   00184E                     l2356:
  2492   00184E  90D8               	bcf	status,0,c
  2493   001850  3652               	rlcf	___awdiv@divisor^0,f,c
  2494   001852  3653               	rlcf	(___awdiv@divisor+1)^0,f,c
  2495   001854  2A54               	incf	___awdiv@counter^0,f,c
  2496   001856                     l2358:
  2497   001856  AE53               	btfss	(___awdiv@divisor+1)^0,7,c
  2498   001858  EF30  F00C         	goto	u1381
  2499   00185C  EF32  F00C         	goto	u1380
  2500   001860                     u1381:
  2501   001860  EF27  F00C         	goto	l2356
  2502   001864                     u1380:
  2503   001864                     l2360:
  2504   001864  90D8               	bcf	status,0,c
  2505   001866  3656               	rlcf	___awdiv@quotient^0,f,c
  2506   001868  3657               	rlcf	(___awdiv@quotient+1)^0,f,c
  2507   00186A  5052               	movf	___awdiv@divisor^0,w,c
  2508   00186C  5C50               	subwf	___awdiv@dividend^0,w,c
  2509   00186E  5053               	movf	(___awdiv@divisor+1)^0,w,c
  2510   001870  5851               	subwfb	(___awdiv@dividend+1)^0,w,c
  2511   001872  A0D8               	btfss	status,0,c
  2512   001874  EF3E  F00C         	goto	u1391
  2513   001878  EF40  F00C         	goto	u1390
  2514   00187C                     u1391:
  2515   00187C  EF45  F00C         	goto	l2368
  2516   001880                     u1390:
  2517   001880  5052               	movf	___awdiv@divisor^0,w,c
  2518   001882  5E50               	subwf	___awdiv@dividend^0,f,c
  2519   001884  5053               	movf	(___awdiv@divisor+1)^0,w,c
  2520   001886  5A51               	subwfb	(___awdiv@dividend+1)^0,f,c
  2521   001888  8056               	bsf	___awdiv@quotient^0,0,c
  2522   00188A                     l2368:
  2523   00188A  90D8               	bcf	status,0,c
  2524   00188C  3253               	rrcf	(___awdiv@divisor+1)^0,f,c
  2525   00188E  3252               	rrcf	___awdiv@divisor^0,f,c
  2526   001890  2E54               	decfsz	___awdiv@counter^0,f,c
  2527   001892  EF32  F00C         	goto	l2360
  2528   001896                     l2372:
  2529   001896  5055               	movf	___awdiv@sign^0,w,c
  2530   001898  B4D8               	btfsc	status,2,c
  2531   00189A  EF51  F00C         	goto	u1401
  2532   00189E  EF53  F00C         	goto	u1400
  2533   0018A2                     u1401:
  2534   0018A2  EF57  F00C         	goto	l2376
  2535   0018A6                     u1400:
  2536   0018A6  6C56               	negf	___awdiv@quotient^0,c
  2537   0018A8  1E57               	comf	(___awdiv@quotient+1)^0,f,c
  2538   0018AA  B0D8               	btfsc	status,0,c
  2539   0018AC  2A57               	incf	(___awdiv@quotient+1)^0,f,c
  2540   0018AE                     l2376:
  2541   0018AE  C056  F050         	movff	___awdiv@quotient,?___awdiv
  2542   0018B2  C057  F051         	movff	___awdiv@quotient+1,?___awdiv+1
  2543   0018B6  0012               	return		;funcret
  2544   0018B8                     __end_of___awdiv:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _Button_read *****************
  2548 ;; Defined at:
  2549 ;;		line 38 in file "ECU_layer/Button/Button.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  btn             1    8[COMRAM] PTR const struct .
  2552 ;;		 -> reset(3), pause(3), speed_up(3), stop(3), 
  2553 ;;		 -> start(3), 
  2554 ;;  _st             1    9[COMRAM] PTR enum E2874
  2555 ;;		 -> stop_state(1), reset_state(1), pause_state(1), speed_state(1), 
  2556 ;;		 -> start_state(1), 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  button_logic    1   12[COMRAM] enum E2821
  2559 ;;  ret             1   11[COMRAM] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      unsigned char 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:        5 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 1
  2576 ;; This function calls:
  2577 ;;		_gpio_pin_read_logic
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text10
  2584   0018B8                     __ptext10:
  2585                           	callstack 0
  2586   0018B8                     _Button_read:
  2587                           	callstack 29
  2588   0018B8                     
  2589                           ;ECU_layer/Button/Button.c: 41:     logic_t button_logic = GPIO_LOGIC_LOW;
  2590   0018B8  0E00               	movlw	0
  2591   0018BA  6E5C               	movwf	Button_read@button_logic^0,c
  2592                           
  2593                           ;ECU_layer/Button/Button.c: 42:     if(btn == ((void*)0) || _st == ((void*)0))
  2594   0018BC  5058               	movf	Button_read@btn^0,w,c
  2595   0018BE  B4D8               	btfsc	status,2,c
  2596   0018C0  EF64  F00C         	goto	u1251
  2597   0018C4  EF66  F00C         	goto	u1250
  2598   0018C8                     u1251:
  2599   0018C8  EF6E  F00C         	goto	l2278
  2600   0018CC                     u1250:
  2601   0018CC  5059               	movf	Button_read@_st^0,w,c
  2602   0018CE  A4D8               	btfss	status,2,c
  2603   0018D0  EF6C  F00C         	goto	u1261
  2604   0018D4  EF6E  F00C         	goto	u1260
  2605   0018D8                     u1261:
  2606   0018D8  EF72  F00C         	goto	l2280
  2607   0018DC                     u1260:
  2608   0018DC                     l2278:
  2609                           
  2610                           ;ECU_layer/Button/Button.c: 43:     {;ECU_layer/Button/Button.c: 44:         ret = (Std_
      +                          ReturnType) 0x00;
  2611   0018DC  0E00               	movlw	0
  2612   0018DE  6E5B               	movwf	Button_read@ret^0,c
  2613                           
  2614                           ;ECU_layer/Button/Button.c: 45:     }
  2615   0018E0  EFB3  F00C         	goto	l103
  2616   0018E4                     l2280:
  2617                           
  2618                           ;ECU_layer/Button/Button.c: 47:     {;ECU_layer/Button/Button.c: 48:         gpio_pin_re
      +                          ad_logic(&(btn->button) ,&button_logic);
  2619   0018E4  C058  F050         	movff	Button_read@btn,gpio_pin_read_logic@_pin_config
  2620   0018E8  0E5C               	movlw	low Button_read@button_logic
  2621   0018EA  6E51               	movwf	gpio_pin_read_logic@logic^0,c
  2622   0018EC  EC0D  F00D         	call	_gpio_pin_read_logic	;wreg free
  2623   0018F0                     
  2624                           ;ECU_layer/Button/Button.c: 49:         if(btn->active == BUTTON_ACTIVE_HIGH)
  2625   0018F0  5058               	movf	Button_read@btn^0,w,c
  2626   0018F2  6ED9               	movwf	fsr2l,c
  2627   0018F4  6ADA               	clrf	fsr2h,c
  2628   0018F6  0E02               	movlw	2
  2629   0018F8  26D9               	addwf	fsr2l,f,c
  2630   0018FA  04DE               	decf	postinc2,w,c
  2631   0018FC  A4D8               	btfss	status,2,c
  2632   0018FE  EF83  F00C         	goto	u1271
  2633   001902  EF85  F00C         	goto	u1270
  2634   001906                     u1271:
  2635   001906  EF9A  F00C         	goto	l2290
  2636   00190A                     u1270:
  2637   00190A                     
  2638                           ;ECU_layer/Button/Button.c: 50:         {;ECU_layer/Button/Button.c: 51:             if(
      +                          button_logic == GPIO_LOGIC_LOW)
  2639   00190A  505C               	movf	Button_read@button_logic^0,w,c
  2640   00190C  A4D8               	btfss	status,2,c
  2641   00190E  EF8B  F00C         	goto	u1281
  2642   001912  EF8D  F00C         	goto	u1280
  2643   001916                     u1281:
  2644   001916  EF93  F00C         	goto	l2288
  2645   00191A                     u1280:
  2646   00191A                     l2286:
  2647                           
  2648                           ;ECU_layer/Button/Button.c: 52:             {;ECU_layer/Button/Button.c: 53:            
      +                               *_st = BUTTON_RELEASED;
  2649   00191A  5059               	movf	Button_read@_st^0,w,c
  2650   00191C  6ED9               	movwf	fsr2l,c
  2651   00191E  6ADA               	clrf	fsr2h,c
  2652   001920  6ADF               	clrf	indf2,c
  2653                           
  2654                           ;ECU_layer/Button/Button.c: 54:             }
  2655   001922  EFB1  F00C         	goto	l2298
  2656   001926                     l2288:
  2657                           
  2658                           ;ECU_layer/Button/Button.c: 56:             {;ECU_layer/Button/Button.c: 57:            
      +                               *_st = BUTTON_PRESSED;
  2659   001926  5059               	movf	Button_read@_st^0,w,c
  2660   001928  6ED9               	movwf	fsr2l,c
  2661   00192A  6ADA               	clrf	fsr2h,c
  2662   00192C  0E01               	movlw	1
  2663   00192E  6EDF               	movwf	indf2,c
  2664   001930  EFB1  F00C         	goto	l2298
  2665   001934                     l2290:
  2666   001934  5058               	movf	Button_read@btn^0,w,c
  2667   001936  6ED9               	movwf	fsr2l,c
  2668   001938  6ADA               	clrf	fsr2h,c
  2669   00193A  0E02               	movlw	2
  2670   00193C  26D9               	addwf	fsr2l,f,c
  2671   00193E  50DF               	movf	indf2,w,c
  2672   001940  A4D8               	btfss	status,2,c
  2673   001942  EFA5  F00C         	goto	u1291
  2674   001946  EFA7  F00C         	goto	u1290
  2675   00194A                     u1291:
  2676   00194A  EFB1  F00C         	goto	l2298
  2677   00194E                     u1290:
  2678   00194E                     
  2679                           ;ECU_layer/Button/Button.c: 61:         {;ECU_layer/Button/Button.c: 62:             if(
      +                          button_logic == GPIO_LOGIC_LOW)
  2680   00194E  505C               	movf	Button_read@button_logic^0,w,c
  2681   001950  A4D8               	btfss	status,2,c
  2682   001952  EFAD  F00C         	goto	u1301
  2683   001956  EFAF  F00C         	goto	u1300
  2684   00195A                     u1301:
  2685   00195A  EF8D  F00C         	goto	l2286
  2686   00195E                     u1300:
  2687   00195E  EF93  F00C         	goto	l2288
  2688   001962                     l2298:
  2689                           
  2690                           ;ECU_layer/Button/Button.c: 75:         ret = (Std_ReturnType) 0x01;
  2691   001962  0E01               	movlw	1
  2692   001964  6E5B               	movwf	Button_read@ret^0,c
  2693   001966                     l103:
  2694                           
  2695                           ;ECU_layer/Button/Button.c: 77:     return ret;
  2696   001966  505B               	movf	Button_read@ret^0,w,c
  2697   001968  0012               	return		;funcret
  2698   00196A                     __end_of_Button_read:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _gpio_pin_read_logic *****************
  2702 ;; Defined at:
  2703 ;;		line 125 in file "MCAL_layer/GPIO/hal_gpio.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2706 ;;		 -> reset(3), pause(3), speed_up(3), stop(3), 
  2707 ;;		 -> start(3), 
  2708 ;;  logic           1    1[COMRAM] PTR enum E2821
  2709 ;;		 -> keypad_get_value@column_logic(1), Button_read@button_logic(1), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  ret             1    7[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      unsigned char 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;Total ram usage:        8 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_Button_read
  2731 ;;		_keypad_get_value
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text11
  2736   001A1A                     __ptext11:
  2737                           	callstack 0
  2738   001A1A                     _gpio_pin_read_logic:
  2739                           	callstack 29
  2740   001A1A                     
  2741                           ;MCAL_layer/GPIO/hal_gpio.c: 128:     if(_pin_config == ((void*)0) || _pin_config->pin >
      +                           8 -1 || logic == ((void*)0))
  2742   001A1A  5050               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2743   001A1C  B4D8               	btfsc	status,2,c
  2744   001A1E  EF13  F00D         	goto	u1191
  2745   001A22  EF15  F00D         	goto	u1190
  2746   001A26                     u1191:
  2747   001A26  EF2D  F00D         	goto	l2250
  2748   001A2A                     u1190:
  2749   001A2A  5050               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2750   001A2C  6ED9               	movwf	fsr2l,c
  2751   001A2E  6ADA               	clrf	fsr2h,c
  2752   001A30  30DF               	rrcf	223,w,c
  2753   001A32  32E8               	rrcf	wreg,f,c
  2754   001A34  32E8               	rrcf	wreg,f,c
  2755   001A36  0B07               	andlw	7
  2756   001A38  6E52               	movwf	??_gpio_pin_read_logic^0,c
  2757   001A3A  0E08               	movlw	8
  2758   001A3C  6052               	cpfslt	??_gpio_pin_read_logic^0,c
  2759   001A3E  EF23  F00D         	goto	u1201
  2760   001A42  EF25  F00D         	goto	u1200
  2761   001A46                     u1201:
  2762   001A46  EF2D  F00D         	goto	l2250
  2763   001A4A                     u1200:
  2764   001A4A  5051               	movf	gpio_pin_read_logic@logic^0,w,c
  2765   001A4C  A4D8               	btfss	status,2,c
  2766   001A4E  EF2B  F00D         	goto	u1211
  2767   001A52  EF2D  F00D         	goto	u1210
  2768   001A56                     u1211:
  2769   001A56  EF31  F00D         	goto	l2252
  2770   001A5A                     u1210:
  2771   001A5A                     l2250:
  2772                           
  2773                           ;MCAL_layer/GPIO/hal_gpio.c: 129:     {;MCAL_layer/GPIO/hal_gpio.c: 130:         ret = (
      +                          Std_ReturnType) 0x00;
  2774   001A5A  0E00               	movlw	0
  2775   001A5C  6E57               	movwf	gpio_pin_read_logic@ret^0,c
  2776                           
  2777                           ;MCAL_layer/GPIO/hal_gpio.c: 131:     }
  2778   001A5E  EF5F  F00D         	goto	l2256
  2779   001A62                     l2252:
  2780                           
  2781                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     {;MCAL_layer/GPIO/hal_gpio.c: 134:         *logic 
      +                          = (*port_registers[_pin_config->port] & (1 << _pin_config->pin));
  2782   001A62  5051               	movf	gpio_pin_read_logic@logic^0,w,c
  2783   001A64  6ED9               	movwf	fsr2l,c
  2784   001A66  6ADA               	clrf	fsr2h,c
  2785   001A68  5050               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2786   001A6A  6EE1               	movwf	fsr1l,c
  2787   001A6C  6AE2               	clrf	fsr1h,c
  2788   001A6E  50E7               	movf	231,w,c
  2789   001A70  0B07               	andlw	7
  2790   001A72  0D02               	mullw	2
  2791   001A74  50F3               	movf	243,w,c
  2792   001A76  0F01               	addlw	low _port_registers
  2793   001A78  6EE1               	movwf	fsr1l,c
  2794   001A7A  6AE2               	clrf	fsr1h,c
  2795   001A7C  CFE6 F052          	movff	postinc1,??_gpio_pin_read_logic
  2796   001A80  CFE5 F053          	movff	postdec1,??_gpio_pin_read_logic+1
  2797   001A84  C052  FFE1         	movff	??_gpio_pin_read_logic,fsr1l
  2798   001A88  C053  FFE2         	movff	??_gpio_pin_read_logic+1,fsr1h
  2799   001A8C  50E7               	movf	indf1,w,c
  2800   001A8E  6E54               	movwf	(??_gpio_pin_read_logic+2)^0,c
  2801   001A90  5050               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2802   001A92  6EE1               	movwf	fsr1l,c
  2803   001A94  6AE2               	clrf	fsr1h,c
  2804   001A96  30E7               	rrcf	231,w,c
  2805   001A98  32E8               	rrcf	wreg,f,c
  2806   001A9A  32E8               	rrcf	wreg,f,c
  2807   001A9C  0B07               	andlw	7
  2808   001A9E  6E55               	movwf	(??_gpio_pin_read_logic+3)^0,c
  2809   001AA0  0E01               	movlw	1
  2810   001AA2  6E56               	movwf	(??_gpio_pin_read_logic+4)^0,c
  2811   001AA4  2A55               	incf	(??_gpio_pin_read_logic+3)^0,f,c
  2812   001AA6  EF57  F00D         	goto	u1224
  2813   001AAA                     u1225:
  2814   001AAA  90D8               	bcf	status,0,c
  2815   001AAC  3656               	rlcf	(??_gpio_pin_read_logic+4)^0,f,c
  2816   001AAE                     u1224:
  2817   001AAE  2E55               	decfsz	(??_gpio_pin_read_logic+3)^0,f,c
  2818   001AB0  EF55  F00D         	goto	u1225
  2819   001AB4  5056               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  2820   001AB6  1454               	andwf	(??_gpio_pin_read_logic+2)^0,w,c
  2821   001AB8  6EDF               	movwf	indf2,c
  2822   001ABA                     
  2823                           ;MCAL_layer/GPIO/hal_gpio.c: 135:         ret = (Std_ReturnType) 0x01;
  2824   001ABA  0E01               	movlw	1
  2825   001ABC  6E57               	movwf	gpio_pin_read_logic@ret^0,c
  2826   001ABE                     l2256:
  2827                           
  2828                           ;MCAL_layer/GPIO/hal_gpio.c: 137:     return ret;
  2829   001ABE  5057               	movf	gpio_pin_read_logic@ret^0,w,c
  2830   001AC0  0012               	return		;funcret
  2831   001AC2                     __end_of_gpio_pin_read_logic:
  2832                           	callstack 0
  2833                           
  2834                           	psect	rparam
  2835   000000                     
  2836                           	psect	config
  2837                           
  2838                           ; Padding undefined space
  2839   300000                     	org	3145728
  2840   300000  FF                 	db	255
  2841                           
  2842                           ;Config register CONFIG1H @ 0x300001
  2843                           ;	Oscillator Selection bits
  2844                           ;	OSC = HS, HS oscillator
  2845                           ;	Fail-Safe Clock Monitor Enable bit
  2846                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2847                           ;	Internal/External Oscillator Switchover bit
  2848                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2849   300001                     	org	3145729
  2850   300001  02                 	db	2
  2851                           
  2852                           ;Config register CONFIG2L @ 0x300002
  2853                           ;	Power-up Timer Enable bit
  2854                           ;	PWRT = OFF, PWRT disabled
  2855                           ;	Brown-out Reset Enable bits
  2856                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2857                           ;	Brown Out Reset Voltage bits
  2858                           ;	BORV = 1, 
  2859   300002                     	org	3145730
  2860   300002  09                 	db	9
  2861                           
  2862                           ;Config register CONFIG2H @ 0x300003
  2863                           ;	Watchdog Timer Enable bit
  2864                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2865                           ;	Watchdog Timer Postscale Select bits
  2866                           ;	WDTPS = 32768, 1:32768
  2867   300003                     	org	3145731
  2868   300003  1E                 	db	30
  2869                           
  2870                           ; Padding undefined space
  2871   300004                     	org	3145732
  2872   300004  FF                 	db	255
  2873                           
  2874                           ;Config register CONFIG3H @ 0x300005
  2875                           ;	CCP2 MUX bit
  2876                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2877                           ;	PORTB A/D Enable bit
  2878                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2879                           ;	Low-Power Timer1 Oscillator Enable bit
  2880                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2881                           ;	MCLR Pin Enable bit
  2882                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2883   300005                     	org	3145733
  2884   300005  81                 	db	129
  2885                           
  2886                           ;Config register CONFIG4L @ 0x300006
  2887                           ;	Stack Full/Underflow Reset Enable bit
  2888                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2889                           ;	Single-Supply ICSP Enable bit
  2890                           ;	LVP = OFF, Single-Supply ICSP disabled
  2891                           ;	Extended Instruction Set Enable bit
  2892                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2893                           ;	Background Debugger Enable bit
  2894                           ;	DEBUG = 0x1, unprogrammed default
  2895   300006                     	org	3145734
  2896   300006  81                 	db	129
  2897                           
  2898                           ; Padding undefined space
  2899   300007                     	org	3145735
  2900   300007  FF                 	db	255
  2901                           
  2902                           ;Config register CONFIG5L @ 0x300008
  2903                           ;	Code Protection bit
  2904                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2905                           ;	Code Protection bit
  2906                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2907                           ;	Code Protection bit
  2908                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2909                           ;	Code Protection bit
  2910                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2911   300008                     	org	3145736
  2912   300008  0F                 	db	15
  2913                           
  2914                           ;Config register CONFIG5H @ 0x300009
  2915                           ;	Boot Block Code Protection bit
  2916                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2917                           ;	Data EEPROM Code Protection bit
  2918                           ;	CPD = OFF, Data EEPROM not code-protected
  2919   300009                     	org	3145737
  2920   300009  C0                 	db	192
  2921                           
  2922                           ;Config register CONFIG6L @ 0x30000A
  2923                           ;	Write Protection bit
  2924                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2925                           ;	Write Protection bit
  2926                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2927                           ;	Write Protection bit
  2928                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2929                           ;	Write Protection bit
  2930                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2931   30000A                     	org	3145738
  2932   30000A  0F                 	db	15
  2933                           
  2934                           ;Config register CONFIG6H @ 0x30000B
  2935                           ;	Configuration Register Write Protection bit
  2936                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2937                           ;	Boot Block Write Protection bit
  2938                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2939                           ;	Data EEPROM Write Protection bit
  2940                           ;	WRTD = OFF, Data EEPROM not write-protected
  2941   30000B                     	org	3145739
  2942   30000B  E0                 	db	224
  2943                           
  2944                           ;Config register CONFIG7L @ 0x30000C
  2945                           ;	Table Read Protection bit
  2946                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2947                           ;	Table Read Protection bit
  2948                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2949                           ;	Table Read Protection bit
  2950                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2951                           ;	Table Read Protection bit
  2952                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2953   30000C                     	org	3145740
  2954   30000C  0F                 	db	15
  2955                           
  2956                           ;Config register CONFIG7H @ 0x30000D
  2957                           ;	Boot Block Table Read Protection bit
  2958                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2959   30000D                     	org	3145741
  2960   30000D  40                 	db	64
  2961                           tosu	equ	0xFFF
  2962                           tosh	equ	0xFFE
  2963                           tosl	equ	0xFFD
  2964                           stkptr	equ	0xFFC
  2965                           pclatu	equ	0xFFB
  2966                           pclath	equ	0xFFA
  2967                           pcl	equ	0xFF9
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           indf0	equ	0xFEF
  2975                           postinc0	equ	0xFEE
  2976                           postdec0	equ	0xFED
  2977                           preinc0	equ	0xFEC
  2978                           plusw0	equ	0xFEB
  2979                           fsr0h	equ	0xFEA
  2980                           fsr0l	equ	0xFE9
  2981                           wreg	equ	0xFE8
  2982                           indf1	equ	0xFE7
  2983                           postinc1	equ	0xFE6
  2984                           postdec1	equ	0xFE5
  2985                           preinc1	equ	0xFE4
  2986                           plusw1	equ	0xFE3
  2987                           fsr1h	equ	0xFE2
  2988                           fsr1l	equ	0xFE1
  2989                           bsr	equ	0xFE0
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           postdec2	equ	0xFDD
  2993                           preinc2	equ	0xFDC
  2994                           plusw2	equ	0xFDB
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        56
    BSS         23
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    Button_initialize@btn	PTR const struct . size(1) Largest target is 3
		 -> pause(COMRAM[3]), reset(COMRAM[3]), speed_up(COMRAM[3]), start(COMRAM[3]), 
		 -> stop(COMRAM[3]), 

    Button_read@_st	PTR enum E2874 size(1) Largest target is 1
		 -> pause_state(COMRAM[1]), reset_state(COMRAM[1]), speed_state(COMRAM[1]), start_state(COMRAM[1]), 
		 -> stop_state(COMRAM[1]), 

    Button_read@btn	PTR const struct . size(1) Largest target is 3
		 -> pause(COMRAM[3]), reset(COMRAM[3]), speed_up(COMRAM[3]), start(COMRAM[3]), 
		 -> stop(COMRAM[3]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> control_1(COMRAM[1]), control_2(COMRAM[1]), control_3(COMRAM[1]), control_4(COMRAM[1]), 
		 -> control_5(COMRAM[1]), control_6(COMRAM[1]), dc_motor_intitialize@obj1(COMRAM[1]), dc_motor_intitialize@obj2(COMRAM[1]), 
		 -> led_initialize@obj(COMRAM[1]), pause(COMRAM[3]), Relay_initialize@obj(COMRAM[1]), reset(COMRAM[3]), 
		 -> seg(COMRAM[5]), seg$segment_pin(COMRAM[4]), speed_up(COMRAM[3]), start(COMRAM[3]), 
		 -> stop(COMRAM[3]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> control_1(COMRAM[1]), control_2(COMRAM[1]), control_3(COMRAM[1]), control_4(COMRAM[1]), 
		 -> control_5(COMRAM[1]), control_6(COMRAM[1]), dc_motor_intitialize@obj1(COMRAM[1]), dc_motor_intitialize@obj2(COMRAM[1]), 
		 -> led_initialize@obj(COMRAM[1]), Relay_initialize@obj(COMRAM[1]), seg(COMRAM[5]), seg$segment_pin(COMRAM[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> pause(COMRAM[3]), reset(COMRAM[3]), speed_up(COMRAM[3]), start(COMRAM[3]), 
		 -> stop(COMRAM[3]), 

    gpio_pin_read_logic@logic	PTR enum E2821 size(1) Largest target is 1
		 -> Button_read@button_logic(COMRAM[1]), keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> control_1(COMRAM[1]), control_2(COMRAM[1]), control_3(COMRAM[1]), control_4(COMRAM[1]), 
		 -> control_5(COMRAM[1]), control_6(COMRAM[1]), dc_motor_intitialize@obj1(COMRAM[1]), dc_motor_intitialize@obj2(COMRAM[1]), 
		 -> dc_motor_move_left@obj1(COMRAM[1]), dc_motor_move_left@obj2(COMRAM[1]), dc_motor_move_right@obj1(COMRAM[1]), dc_motor_move_right@obj2(COMRAM[1]), 
		 -> dc_motor_stop@obj1(COMRAM[1]), dc_motor_stop@obj2(COMRAM[1]), led_initialize@obj(COMRAM[1]), led_turn_off@obj(COMRAM[1]), 
		 -> led_turn_on@obj(COMRAM[1]), Relay_initialize@obj(COMRAM[1]), Relay_turn_off@obj(COMRAM[1]), Relay_turn_on@obj(COMRAM[1]), 
		 -> seg(COMRAM[5]), seg$segment_pin(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    segment_inititalize@seg	PTR const struct . size(1) Largest target is 5
		 -> seg(COMRAM[5]), 

    segment_write_number@seg	PTR const struct . size(1) Largest target is 5
		 -> seg(COMRAM[5]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_Button_read
    _main->_application_initialize
    _segment_write_number->___awdiv
    _segment_write_number->_gpio_pin_write_logic
    _application_initialize->_segment_inititalize
    _segment_inititalize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _Button_initialize->_gpio_pin_direction_initialize
    _Button_read->_gpio_pin_read_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40105
                                             13 COMRAM     4     4      0
                        _Button_read
                            ___awdiv
                            ___awmod
             _application_initialize
               _gpio_pin_write_logic
               _segment_write_number
 ---------------------------------------------------------------------------------
 (1) _segment_write_number                                 3     1      2    9392
                                              8 COMRAM     3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   18928
                                             12 COMRAM     1     1      0
                  _Button_initialize
                _gpio_pin_initialize
                _segment_inititalize
 ---------------------------------------------------------------------------------
 (2) _segment_inititalize                                  2     1      1    9183
                                             10 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    8968
                                              8 COMRAM     2     1      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    7323
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _Button_initialize                                    2     1      1     765
                                              6 COMRAM     2     1      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     316
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Button_read                                          5     3      2    1969
                                              8 COMRAM     5     3      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  8     6      2     461
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_read
     _gpio_pin_read_logic
   ___awdiv
   ___awmod
   _application_initialize
     _Button_initialize
       _gpio_pin_direction_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _segment_inititalize
       _gpio_pin_initialize
   _gpio_pin_write_logic
   _segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      61       1       76.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      39        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 22:15:23 2024

                                      l52 1BB0                                        l45 1C4C  
                                      l97 1CE2                              ___awdiv@sign 0055  
                                     l103 1966                                       l112 1968  
                                     l412 1C00                                       l424 16E2  
                                     l450 1AC0                                       l443 17F2  
                                     l615 1B3A                                       l916 18B6  
                                     l929 1A18                                       _seg 001F  
                                     _ret 0061                              ___awmod@sign 0055  
                             _start_state 004F                       led_initialize@F2894 0042  
                                     wreg 0FE8                                      l2210 1BE2  
                                    l2212 1BE6                                      l2220 1C02  
                                    l2206 1BB2                                      l2222 1C12  
                                    l2400 19CE                                      l2240 1CE0  
                                    l2232 1CBC                                      l2216 1BFE  
                                    l2208 1BC2                                      l2224 1C1A  
                                    l2250 1A5A                                      l2410 1A08  
                                    l2402 19E4                                      l2234 1CCC  
                                    l2170 1776                                      l2162 16E4  
                                    l2226 1C46                                      l2252 1A62  
                                    l2244 1A1A                                      l2340 1806  
                                    l2412 1A10                                      l2404 19EC  
                                    l2236 1CD4                                      l2164 16F8  
                                    l2228 1C4A                                      l2260 1B3C  
                                    l2254 1ABA                                      l2246 1A2A  
                                    l2350 182C                                      l2342 180E  
                                    l2406 19F2                                      l2190 15F8  
                                    l2238 1CDC                                      l2174 17C6  
                                    l2166 1718                                      l2334 1AC2  
                                    l2270 1BAE                                      l2262 1B4C  
                                    l2256 1ABE                                      l2248 1A4A  
                                    l2280 18E4                                      l2360 1864  
                                    l2352 1834                                      l2344 1812  
                                    l2336 17F4                                      l2408 19F8  
                                    l2192 164E                                      l2184 15C4  
                                    l2168 1720                                      l2176 17F0  
                                    l2264 1B5C                                      l2290 1934  
                                    l2282 18F0                                      l2274 18B8  
                                    l2370 1890                                      l2362 186A  
                                    l2354 1846                                      l2346 1820  
                                    l2338 17F8                                      l2194 169E  
                                    l2186 15D4                                      l2266 1B64  
                                    l2292 194E                                      l2284 190A  
                                    l2276 18CC                                      l2364 1880  
                                    l2356 184E                                      l2372 1896  
                                    l2348 1828                                      l2380 196A  
                                    l2196 16A2                                      l2188 15F4  
                                    l2268 1BAA                                      l2700 137C  
                                    l2620 1016                                      l2286 191A  
                                    l2278 18DC                                      l2374 18A6  
                                    l2366 1888                                      l2358 1856  
                                    l2390 1996                                      l2382 196E  
                                    l2198 16E2                                      l2710 13F6  
                                    l2702 138A                                      l2630 1040  
                                    l2622 101A                                      l2288 1926  
                                    l2376 18AE                                      l2368 188A  
                                    l2392 199E                                      l2384 197C  
                                    l2720 147C                                      l2712 1442  
                                    l2704 13BA                                      l2640 10A6  
                                    l2632 1050                                      l2624 101E  
                                    l2298 1962                                      l2394 19B0  
                                    l2386 1984                                      l2730 150E  
                                    l2722 148C                                      l2714 1452  
                                    l2706 13C8                                      l2650 113E  
                                    l2642 10B4                                      l2634 1058  
                                    l2626 102C                                      l2618 1012  
                                    l2396 19B8                                      l2388 1988  
                                    l2732 1512                                      l2716 1460  
                                    l2708 13D6                                      l2724 149C  
                                    l2660 11A6                                      l2652 114C  
                                    l2644 10C2                                      l2636 1068  
                                    l2628 103C                                      l2398 19C0  
                                    l2734 1516                                      l2742 1538  
                                    l2726 14AA                                      l2718 146E  
                                    l2670 123E                                      l2662 11C6  
                                    l2654 115A                                      l2646 10E2  
                                    l2638 1076                                      l2750 1564  
                                    l2760 1590                                      l2752 1576  
                                    l2744 1546                                      l2736 151A  
                                    l2728 14BA                                      l2680 1278  
                                    l2672 124E                                      l2664 1212  
                                    l2656 118A                                      l2648 112E  
                                    l2762 15A2                                      l2754 1578  
                                    l2746 1556                                      l2738 1528  
                                    l2690 12E4                                      l2682 1288  
                                    l2674 1256                                      l2666 1222  
                                    l2658 1198                                      l2764 15A4  
                                    l2756 158A                                      l2748 1562  
                                    l2692 12F2                                      l2684 1298  
                                    l2676 1266                                      l2668 1230  
                                    l2766 15A8                                      l2758 158C  
                                    l2694 1312                                      l2686 12A6  
                                    l2678 126A                                      l2768 15B8  
                                    l2696 135E                                      l2688 12D6  
                                    l2866 17DA                                      l2698 136E  
                                    l2868 16CC                                      u1100 15F4  
                                    u1101 15F0                                      u1200 1A4A  
                                    u1201 1A46                                      u1210 1A5A  
                                    u1130 16B8                                      u1114 1616  
                                    u1050 16F8                                      u1211 1A56  
                                    u1131 16B2                                      u1115 1612  
                                    u1051 16F4                                      u1300 195E  
                                    u1140 16BA                                      u1124 166C  
                                    u1060 1718                                      u1301 195A  
                                    u1125 1668                                      u1061 1714  
                                    u1150 1BC2                                      u1230 1B4C  
                                    u1151 1BBE                                      u1231 1B48  
                                    u2007 128E                                      u1224 1AAE  
                                    u1400 18A6                                      u1160 1BE2  
                                    u1240 1B5C                                      u1225 1AAA  
                                    u1401 18A2                                      u1161 1BDE  
                                    u1241 1B58                                      u2017 12CC  
                                    u1250 18CC                                      u1410 197C  
                                    u1090 15D4                                      u1074 173E  
                                    u1170 1C12                                      u1251 18C8  
                                    u1411 1978                                      u1091 15D0  
                                    u1075 173A                                      u1171 1C0E  
                                    u2027 1318                                      u1260 18DC  
                                    u1420 1996                                      u1180 1CCC  
                                    u1084 1794                                      u1261 18D8  
                                    u1421 1992                                      u1181 1CC8  
                                    u1085 1790                                      u2037 1364  
                                    _LATA 0F89                                      u1190 1A2A  
                                    u1270 190A                                      u1350 1806  
                                    u1430 19B0                                      _LATB 0F8A  
                                    u1191 1A26                                      u1271 1906  
                                    u1351 1802                                      u1431 19AC  
                                    u2047 13B0                                      _LATC 0F8B  
                                    u1280 191A                                      u1360 1820  
                                    u1440 19CE                                      _LATD 0F8C  
                                    u1281 1916                                      u1361 181C  
                                    u1441 19CA                                      u2057 13FC  
                                    _LATE 0F8D                                      u1290 194E  
                                    u1370 1846                                      u1450 19E4  
                                    u1291 194A                                      u1371 1842  
                                    u1451 19E0                                      u2067 1448  
                                    u1380 1864                                      u1460 1A08  
                                    u1700 103C                                      u1381 1860  
                                    u1461 1A04                                      u1701 1038  
                                    u1390 1880                                      u1710 1050  
                                    u1391 187C                                      u1711 104C  
                                    u1800 1576                                      u1720 124E  
                                    u1801 1572                                      u1721 124A  
                                    u1810 158A                                      u1730 1266  
                                    u1811 1586                                      u1731 1262  
                                    u1820 15A2                                      u1740 1288  
                                    u1821 159E                                      u1741 1284  
                                    u1830 15B8                                      u1750 148C  
                                    u1831 15B4                                      u1751 1488  
                                    u1760 149C                                      u1761 1498  
                             main@counter 005E                                      u1770 14BA  
                                    u1771 14B6                                      u1780 1538  
                                    u1781 1534                                      u1790 1556  
                                    u1791 1552                                      u1937 105E  
                                    u1947 109C                                      u1957 10E8  
                                    u1967 1134                                      u1977 1180  
                                    u1987 11CC                                      u1997 1218  
          gpio_pin_read_logic@_pin_config 0050                                      _main 1012  
                                    fsr1h 0FE2                                      fsr2h 0FDA  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    _stop 002D                                      prodl 0FF3  
                                    start 0000                              ___param_bank 0000  
                    _gpio_pin_write_logic 16E4                                     ?_main 0050  
                ??_application_initialize 005C                             ??_Button_read 005A  
                         __end_of___awdiv 18B8                           __end_of___awmod 1A1A  
                         ___awdiv@divisor 0052                           ___awdiv@counter 0054  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   _hours 0039                                     _pause 0027  
                                   _reset 0024                                     _start 0030  
                                   tablat 0FF5                                     status 0FD8  
                     _segment_inititalize 1C02            ?_gpio_pin_direction_initialize 0050  
                         __initialization 1C86                              __end_of_main 15C4  
                   ?_gpio_pin_write_logic 0050                  gpio_pin_read_logic@logic 0051  
                           _lat_registers 000B                                    ??_main 005D  
                    ?_segment_inititalize 005A                             __activetblptr 0002  
                        led_turn_on@F2899 0041                            Button_read@_st 0059  
                          Button_read@btn 0058                            Button_read@ret 005B  
                     __end_of_Button_read 196A                          ___awdiv@dividend 0050  
                               ??___awdiv 0054                                 ??___awmod 0054  
                                  clear_0 1CAC                          ___awdiv@quotient 0056  
                         ___awmod@divisor 0052                                    isa$std 0001  
                   ??_segment_inititalize 005B                           ___awmod@counter 0054  
                            __pdataCOMRAM 0001                    segment_inititalize@seg 005A  
                  segment_inititalize@ret 005B                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 1CB2                             ___rparam_used 0001  
                  ??_gpio_pin_write_logic 0052                            __pcstackCOMRAM 0050  
gpio_pin_direction_initialize@_pin_config 0050                               _Button_read 18B8  
                          main@delay_time 0060                    _application_initialize 1AC2  
                              __pnvCOMRAM 0061                         led_turn_off@F2904 0040  
                         led_toggle@F2909 003F                  dc_motor_move_right@F2900 0048  
                dc_motor_move_right@F2902 0047                             _keypad_values 1001  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 1BB2  
                     _gpio_pin_read_logic 1A1A                                   ___awdiv 17F4  
                                 ___awmod 196A                              __psmallconst 1000  
                                 __pcinit 1C86                                   __ramtop 1000  
                                 __ptext0 1012                                   __ptext1 1B3C  
                                 __ptext2 1AC2                                   __ptext3 1C02  
                                 __ptext4 1BB2                                   __ptext5 16E4  
                                 __ptext6 1CBC                                   __ptext7 15C4  
                                 __ptext8 196A                                   __ptext9 17F4  
         ??_gpio_pin_direction_initialize 0051                          ___awmod@dividend 0050  
                                 _minutes 003A                                   _seconds 003B  
                    ?_gpio_pin_initialize 0058                      ?_gpio_pin_read_logic 0050  
                    end_of_initialization 1CB2                             __Lmediumconst 0000  
                      dc_motor_stop@F2914 0044                        dc_motor_stop@F2916 0043  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                            main@start_flag 005F  
               dc_motor_intitialize@F2893 004A                 dc_motor_intitialize@F2895 0049  
                   ??_gpio_pin_initialize 0059                         _Button_initialize 1CBC  
                   ??_gpio_pin_read_logic 0052                        ?_Button_initialize 0056  
                     ??_Button_initialize 0057                                _stop_state 004E  
             __end_of_segment_inititalize 1C4E                             __pidataCOMRAM 1C4E  
                            ?_Button_read 0058                 __end_of_Button_initialize 1CE4  
                     start_initialization 1C86     __end_of_gpio_pin_direction_initialize 16E4  
           _gpio_pin_direction_initialize 15C4                   ?_application_initialize 0050  
                 dc_motor_move_left@F2907 0046                   dc_motor_move_left@F2909 0045  
                    Button_initialize@btn 0056              __end_of_segment_write_number 1BB2  
                    Button_initialize@ret 0057                               __pbssCOMRAM 0039  
          __end_of_application_initialize 1B3C                     Relay_initialize@F2890 003E  
         gpio_pin_write_logic@_pin_config 0050                                  ?___awdiv 0050  
                                ?___awmod 0050                 gpio_pin_write_logic@logic 0051  
                             __smallconst 1000                                 _control_1 0038  
                               _control_2 0037                                 _control_3 0036  
                               _control_4 0035                                 _control_5 0034  
                               _control_6 0033                       Relay_turn_off@F2900 003C  
                    _segment_write_number 1B3C                   segment_write_number@seg 0058  
                 segment_write_number@ret 005A                   gpio_pin_write_logic@ret 0057  
                               copy_data0 1C9A                    gpio_pin_read_logic@ret 0057  
                                __Hrparam 0000                                  __Lrparam 0000  
                 Button_read@button_logic 005C               __end_of_gpio_pin_initialize 1C02  
             __end_of_gpio_pin_read_logic 1AC2            gpio_pin_initialize@_pin_config 0058  
                   ?_segment_write_number 0058                                  __ptext10 18B8  
                                __ptext11 1A1A                        Relay_turn_on@F2895 003D  
                                isa$xinst 0000                                  _speed_up 002A  
                             _pause_state 004C                     __end_of_keypad_values 1011  
            __end_of_gpio_pin_write_logic 17F4                segment_write_number@number 0059  
                             _reset_state 004D                    ??_segment_write_number 005A  
               application_initialize@ret 005C                            _port_registers 0001  
                             _speed_state 004B  
